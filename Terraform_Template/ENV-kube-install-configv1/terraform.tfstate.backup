{
  "version": 4,
  "terraform_version": "0.12.23",
  "serial": 1372,
  "lineage": "e2a72692-6054-a1ac-fe12-3c9b39984cf9",
  "outputs": {
    "all_the_way": {
      "value": "http://ec2-52-33-52-157.us-west-2.compute.amazonaws.com/#/?username=ps-student-cp8w\u0026password=0c6mcsmn",
      "type": "string"
    },
    "lab_password": {
      "value": "0c6mcsmn",
      "type": "string"
    },
    "lab_url_link": {
      "value": "http://ec2-52-33-52-157.us-west-2.compute.amazonaws.com",
      "type": "string"
    },
    "lab_username": {
      "value": "ps-student-cp8w",
      "type": "string"
    },
    "nix-ssh-1-name": {
      "value": "C1-CP1",
      "type": "string"
    },
    "nix-ssh-1-protocol": {
      "value": "ssh",
      "type": "string"
    },
    "nix-ssh-console-1-dns": {
      "value": "ec2-34-214-125-219.us-west-2.compute.amazonaws.com",
      "type": "string"
    },
    "nix-ssh-console-1-extip": {
      "value": "34.214.125.219",
      "type": "string"
    },
    "nix-ssh-console-1-port": {
      "value": "22",
      "type": "string"
    },
    "nix-ssh-console-1-un": {
      "value": "ubuntu",
      "type": "string"
    },
    "private_key_pem": {
      "value": "-----BEGIN RSA PRIVATE KEY-----\n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\n-----END RSA PRIVATE KEY-----\n",
      "type": "string"
    },
    "rdp_instance_id": {
      "value": "i-08e6d93e6fa71b831",
      "type": "string"
    },
    "ssh_instance_id": {
      "value": "i-0901bd5d658e50238",
      "type": "string"
    },
    "win-rdp-1-name": {
      "value": "Windows 2019 #1",
      "type": "string"
    },
    "win-rdp-1-protocol": {
      "value": "rdp",
      "type": "string"
    },
    "win-rdp-console-1-dns": {
      "value": "ec2-34-215-220-164.us-west-2.compute.amazonaws.com",
      "type": "string"
    },
    "win-rdp-console-1-extip": {
      "value": "34.215.220.164",
      "type": "string"
    },
    "win-rdp-console-2-port": {
      "value": "3389",
      "type": "string"
    },
    "win-rdp-console-2-pw": {
      "value": "eot10@XSJghePSHl",
      "type": "string"
    },
    "win-rdp-console-2-un": {
      "value": "administrator",
      "type": "string"
    }
  },
  "resources": [
    {
      "mode": "data",
      "type": "aws_ami",
      "name": "u16",
      "provider": "provider.aws",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "architecture": "x86_64",
            "arn": "arn:aws:ec2:us-west-2::image/ami-0db01fabda16f6445",
            "block_device_mappings": [
              {
                "device_name": "/dev/sda1",
                "ebs": {
                  "delete_on_termination": "true",
                  "encrypted": "false",
                  "iops": "0",
                  "snapshot_id": "snap-095c38d77d593f49c",
                  "throughput": "0",
                  "volume_size": "8",
                  "volume_type": "gp2"
                },
                "no_device": "",
                "virtual_name": ""
              },
              {
                "device_name": "/dev/sdb",
                "ebs": {},
                "no_device": "",
                "virtual_name": "ephemeral0"
              },
              {
                "device_name": "/dev/sdc",
                "ebs": {},
                "no_device": "",
                "virtual_name": "ephemeral1"
              }
            ],
            "creation_date": "2021-04-16T13:30:12.000Z",
            "description": "Canonical, Ubuntu, 16.04 LTS, amd64 xenial image build on 2021-04-16",
            "executable_users": null,
            "filter": [
              {
                "name": "name",
                "values": [
                  "ubuntu/images/hvm-ssd/ubuntu-xenial-16.04-amd64-server-*"
                ]
              },
              {
                "name": "virtualization-type",
                "values": [
                  "hvm"
                ]
              }
            ],
            "hypervisor": "xen",
            "id": "ami-0db01fabda16f6445",
            "image_id": "ami-0db01fabda16f6445",
            "image_location": "099720109477/ubuntu/images/hvm-ssd/ubuntu-xenial-16.04-amd64-server-20210416",
            "image_owner_alias": null,
            "image_type": "machine",
            "kernel_id": null,
            "most_recent": true,
            "name": "ubuntu/images/hvm-ssd/ubuntu-xenial-16.04-amd64-server-20210416",
            "name_regex": null,
            "owner_id": "099720109477",
            "owners": [
              "099720109477"
            ],
            "platform": null,
            "product_codes": [],
            "public": true,
            "ramdisk_id": null,
            "root_device_name": "/dev/sda1",
            "root_device_type": "ebs",
            "root_snapshot_id": "snap-095c38d77d593f49c",
            "sriov_net_support": "simple",
            "state": "available",
            "state_reason": {
              "code": "UNSET",
              "message": "UNSET"
            },
            "tags": {},
            "virtualization_type": "hvm"
          }
        }
      ]
    },
    {
      "mode": "data",
      "type": "aws_ami",
      "name": "u18",
      "provider": "provider.aws",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "architecture": "x86_64",
            "arn": "arn:aws:ec2:us-west-2::image/ami-090717c950a5c34d3",
            "block_device_mappings": [
              {
                "device_name": "/dev/sda1",
                "ebs": {
                  "delete_on_termination": "true",
                  "encrypted": "false",
                  "iops": "0",
                  "snapshot_id": "snap-0fc9152359927a29b",
                  "throughput": "0",
                  "volume_size": "8",
                  "volume_type": "gp2"
                },
                "no_device": "",
                "virtual_name": ""
              },
              {
                "device_name": "/dev/sdb",
                "ebs": {},
                "no_device": "",
                "virtual_name": "ephemeral0"
              },
              {
                "device_name": "/dev/sdc",
                "ebs": {},
                "no_device": "",
                "virtual_name": "ephemeral1"
              }
            ],
            "creation_date": "2021-04-16T16:11:58.000Z",
            "description": "Canonical, Ubuntu, 18.04 LTS, amd64 bionic image build on 2021-04-15",
            "executable_users": null,
            "filter": [
              {
                "name": "name",
                "values": [
                  "ubuntu/images/hvm-ssd/ubuntu-bionic-18.04-amd64-server-*"
                ]
              }
            ],
            "hypervisor": "xen",
            "id": "ami-090717c950a5c34d3",
            "image_id": "ami-090717c950a5c34d3",
            "image_location": "099720109477/ubuntu/images/hvm-ssd/ubuntu-bionic-18.04-amd64-server-20210415",
            "image_owner_alias": null,
            "image_type": "machine",
            "kernel_id": null,
            "most_recent": true,
            "name": "ubuntu/images/hvm-ssd/ubuntu-bionic-18.04-amd64-server-20210415",
            "name_regex": null,
            "owner_id": "099720109477",
            "owners": [
              "099720109477"
            ],
            "platform": null,
            "product_codes": [],
            "public": true,
            "ramdisk_id": null,
            "root_device_name": "/dev/sda1",
            "root_device_type": "ebs",
            "root_snapshot_id": "snap-0fc9152359927a29b",
            "sriov_net_support": "simple",
            "state": "available",
            "state_reason": {
              "code": "UNSET",
              "message": "UNSET"
            },
            "tags": {},
            "virtualization_type": "hvm"
          }
        }
      ]
    },
    {
      "mode": "data",
      "type": "aws_ami",
      "name": "u20",
      "provider": "provider.aws",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "architecture": "x86_64",
            "arn": "arn:aws:ec2:us-west-2::image/ami-0554443e7f55d3eeb",
            "block_device_mappings": [
              {
                "device_name": "/dev/sda1",
                "ebs": {
                  "delete_on_termination": "true",
                  "encrypted": "false",
                  "iops": "0",
                  "snapshot_id": "snap-040e7a73dae391214",
                  "throughput": "0",
                  "volume_size": "8",
                  "volume_type": "gp2"
                },
                "no_device": "",
                "virtual_name": ""
              },
              {
                "device_name": "/dev/sdb",
                "ebs": {},
                "no_device": "",
                "virtual_name": "ephemeral0"
              },
              {
                "device_name": "/dev/sdc",
                "ebs": {},
                "no_device": "",
                "virtual_name": "ephemeral1"
              }
            ],
            "creation_date": "2021-04-16T05:35:08.000Z",
            "description": "Canonical, Ubuntu, 20.04 LTS, amd64 focal image build on 2021-04-15",
            "executable_users": null,
            "filter": [
              {
                "name": "name",
                "values": [
                  "ubuntu/images/hvm-ssd/ubuntu-focal-20.04-amd64-server*"
                ]
              },
              {
                "name": "virtualization-type",
                "values": [
                  "hvm"
                ]
              }
            ],
            "hypervisor": "xen",
            "id": "ami-0554443e7f55d3eeb",
            "image_id": "ami-0554443e7f55d3eeb",
            "image_location": "099720109477/ubuntu/images/hvm-ssd/ubuntu-focal-20.04-amd64-server-20210415",
            "image_owner_alias": null,
            "image_type": "machine",
            "kernel_id": null,
            "most_recent": true,
            "name": "ubuntu/images/hvm-ssd/ubuntu-focal-20.04-amd64-server-20210415",
            "name_regex": null,
            "owner_id": "099720109477",
            "owners": [
              "099720109477"
            ],
            "platform": null,
            "product_codes": [],
            "public": true,
            "ramdisk_id": null,
            "root_device_name": "/dev/sda1",
            "root_device_type": "ebs",
            "root_snapshot_id": "snap-040e7a73dae391214",
            "sriov_net_support": "simple",
            "state": "available",
            "state_reason": {
              "code": "UNSET",
              "message": "UNSET"
            },
            "tags": {},
            "virtualization_type": "hvm"
          }
        }
      ]
    },
    {
      "mode": "data",
      "type": "aws_ami",
      "name": "w19",
      "provider": "provider.aws",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "architecture": "x86_64",
            "arn": "arn:aws:ec2:us-west-2::image/ami-0b7ebdd52b84c244d",
            "block_device_mappings": [
              {
                "device_name": "/dev/sda1",
                "ebs": {
                  "delete_on_termination": "true",
                  "encrypted": "false",
                  "iops": "0",
                  "snapshot_id": "snap-0c4365083d1d3b19b",
                  "throughput": "0",
                  "volume_size": "30",
                  "volume_type": "gp2"
                },
                "no_device": "",
                "virtual_name": ""
              },
              {
                "device_name": "xvdca",
                "ebs": {},
                "no_device": "",
                "virtual_name": "ephemeral0"
              },
              {
                "device_name": "xvdcb",
                "ebs": {},
                "no_device": "",
                "virtual_name": "ephemeral1"
              },
              {
                "device_name": "xvdcc",
                "ebs": {},
                "no_device": "",
                "virtual_name": "ephemeral2"
              },
              {
                "device_name": "xvdcd",
                "ebs": {},
                "no_device": "",
                "virtual_name": "ephemeral3"
              },
              {
                "device_name": "xvdce",
                "ebs": {},
                "no_device": "",
                "virtual_name": "ephemeral4"
              },
              {
                "device_name": "xvdcf",
                "ebs": {},
                "no_device": "",
                "virtual_name": "ephemeral5"
              },
              {
                "device_name": "xvdcg",
                "ebs": {},
                "no_device": "",
                "virtual_name": "ephemeral6"
              },
              {
                "device_name": "xvdch",
                "ebs": {},
                "no_device": "",
                "virtual_name": "ephemeral7"
              },
              {
                "device_name": "xvdci",
                "ebs": {},
                "no_device": "",
                "virtual_name": "ephemeral8"
              },
              {
                "device_name": "xvdcj",
                "ebs": {},
                "no_device": "",
                "virtual_name": "ephemeral9"
              },
              {
                "device_name": "xvdck",
                "ebs": {},
                "no_device": "",
                "virtual_name": "ephemeral10"
              },
              {
                "device_name": "xvdcl",
                "ebs": {},
                "no_device": "",
                "virtual_name": "ephemeral11"
              },
              {
                "device_name": "xvdcm",
                "ebs": {},
                "no_device": "",
                "virtual_name": "ephemeral12"
              },
              {
                "device_name": "xvdcn",
                "ebs": {},
                "no_device": "",
                "virtual_name": "ephemeral13"
              },
              {
                "device_name": "xvdco",
                "ebs": {},
                "no_device": "",
                "virtual_name": "ephemeral14"
              },
              {
                "device_name": "xvdcp",
                "ebs": {},
                "no_device": "",
                "virtual_name": "ephemeral15"
              },
              {
                "device_name": "xvdcq",
                "ebs": {},
                "no_device": "",
                "virtual_name": "ephemeral16"
              },
              {
                "device_name": "xvdcr",
                "ebs": {},
                "no_device": "",
                "virtual_name": "ephemeral17"
              },
              {
                "device_name": "xvdcs",
                "ebs": {},
                "no_device": "",
                "virtual_name": "ephemeral18"
              },
              {
                "device_name": "xvdct",
                "ebs": {},
                "no_device": "",
                "virtual_name": "ephemeral19"
              },
              {
                "device_name": "xvdcu",
                "ebs": {},
                "no_device": "",
                "virtual_name": "ephemeral20"
              },
              {
                "device_name": "xvdcv",
                "ebs": {},
                "no_device": "",
                "virtual_name": "ephemeral21"
              },
              {
                "device_name": "xvdcw",
                "ebs": {},
                "no_device": "",
                "virtual_name": "ephemeral22"
              },
              {
                "device_name": "xvdcx",
                "ebs": {},
                "no_device": "",
                "virtual_name": "ephemeral23"
              },
              {
                "device_name": "xvdcy",
                "ebs": {},
                "no_device": "",
                "virtual_name": "ephemeral24"
              },
              {
                "device_name": "xvdcz",
                "ebs": {},
                "no_device": "",
                "virtual_name": "ephemeral25"
              }
            ],
            "creation_date": "2021-04-14T05:55:21.000Z",
            "description": "Microsoft Windows Server 2019 with Desktop Experience Locale English AMI provided by Amazon",
            "executable_users": null,
            "filter": [
              {
                "name": "name",
                "values": [
                  "Windows_Server-2019-English-Full-Base-*"
                ]
              },
              {
                "name": "virtualization-type",
                "values": [
                  "hvm"
                ]
              }
            ],
            "hypervisor": "xen",
            "id": "ami-0b7ebdd52b84c244d",
            "image_id": "ami-0b7ebdd52b84c244d",
            "image_location": "amazon/Windows_Server-2019-English-Full-Base-2021.04.14",
            "image_owner_alias": "amazon",
            "image_type": "machine",
            "kernel_id": null,
            "most_recent": true,
            "name": "Windows_Server-2019-English-Full-Base-2021.04.14",
            "name_regex": null,
            "owner_id": "801119661308",
            "owners": [
              "801119661308"
            ],
            "platform": "windows",
            "product_codes": [],
            "public": true,
            "ramdisk_id": null,
            "root_device_name": "/dev/sda1",
            "root_device_type": "ebs",
            "root_snapshot_id": "snap-0c4365083d1d3b19b",
            "sriov_net_support": "simple",
            "state": "available",
            "state_reason": {
              "code": "UNSET",
              "message": "UNSET"
            },
            "tags": {},
            "virtualization_type": "hvm"
          }
        }
      ]
    },
    {
      "mode": "data",
      "type": "template_file",
      "name": "forward-proxy",
      "provider": "provider.template",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "filename": null,
            "id": "08ce9005f6215e109b89458be048c3c83df4024aabadf5b2b8adbacf7b39434c",
            "rendered": "#! /bin/bash\n#timesyncd attempts to reach out to ntp.ubuntu.com but hangs because it gets not response, this will speed up overall loadtime.\nsystemctl stop systemd-timesyncd\nsystemctl disable systemd-timesyncd\n\n\necho \"begin proxy test\" \u003e\u003e script.test\nsudo apt update\nsudo apt -y install ec2-instance-connect\nsudo apt -y install tinyproxy\nsudo cp /etc/tinyproxy/tinyproxy.conf /home/ubuntu\nsudo echo \"Allow 172.16.0.0/16\" \u003e\u003e /home/ubuntu/tinyproxy.conf\nsudo echo \"BasicAuth tstark pssecrocks\" \u003e\u003e /home/ubuntu/tinyproxy.conf\nsudo echo \"\" \u003e\u003e /home/ubuntu/tinyproxy.conf\nsudo cp /home/ubuntu/tinyproxy.conf /etc/tinyproxy/tinyproxy.conf\n#/sbin/iptables -I INPUT -p tcp --dport 8888 -m state --state NEW,ESTABLISHED -j ACCEPT\n#/sbin/iptables -I OUTPUT -p tcp --sport 8888 -m state --state ESTABLISHED -j ACCEPT\nsudo systemctl restart tinyproxy\nsudo apt remove ec2-instance-connect\n\n",
            "template": "#! /bin/bash\n#timesyncd attempts to reach out to ntp.ubuntu.com but hangs because it gets not response, this will speed up overall loadtime.\nsystemctl stop systemd-timesyncd\nsystemctl disable systemd-timesyncd\n\n\necho \"begin proxy test\" \u003e\u003e script.test\nsudo apt update\nsudo apt -y install ec2-instance-connect\nsudo apt -y install tinyproxy\nsudo cp /etc/tinyproxy/tinyproxy.conf /home/ubuntu\nsudo echo \"Allow 172.16.0.0/16\" \u003e\u003e /home/ubuntu/tinyproxy.conf\nsudo echo \"BasicAuth tstark pssecrocks\" \u003e\u003e /home/ubuntu/tinyproxy.conf\nsudo echo \"\" \u003e\u003e /home/ubuntu/tinyproxy.conf\nsudo cp /home/ubuntu/tinyproxy.conf /etc/tinyproxy/tinyproxy.conf\n#/sbin/iptables -I INPUT -p tcp --dport 8888 -m state --state NEW,ESTABLISHED -j ACCEPT\n#/sbin/iptables -I OUTPUT -p tcp --sport 8888 -m state --state ESTABLISHED -j ACCEPT\nsudo systemctl restart tinyproxy\nsudo apt remove ec2-instance-connect\n\n",
            "vars": null
          }
        }
      ]
    },
    {
      "mode": "data",
      "type": "template_file",
      "name": "nix-ssh-console",
      "provider": "provider.template",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "filename": null,
            "id": "770435b8357930cf498ecee8484cd8f3df4f046fa3dc00bde6638adb79166d35",
            "rendered": "#! /bin/bash\n\n#################################################################################################Pluralsight Editing Only###########################################################################################\n\n#timesyncd attempts to reach out to ntp.ubuntu.com but hangs because it gets not response, this will speed up overall loadtime.\nsystemctl stop systemd-timesyncd\nsystemctl disable systemd-timesyncd\n# waits for proxy to be up and logs to script.test\necho \"begin proxy test\" \u003e\u003e script.test\nresponse=\\$$(sudo http_proxy=http://tstark:pssecrocks@172.16.245.222:8888 curl --write-out '%{http_code}' --silent --output /dev/null www.google.com)\nwhile [ \\$$response -ne \"200\" ]; do\n    echo \\$$response \u003e\u003e script.test\n    sleep 10\n    response=\\$$(sudo http_proxy=http://tstark:pssecrocks@172.16.245.222:8888 curl --write-out '%{http_code}' --silent --output /dev/null www.google.com)\ndone\n#once a positive 200 response is provided throughthe proxy to google, the peaceinourtime file is reated in the home folder. Note that the other files are created in the root folder.\necho \"success\"\u003e\u003e /home/ubuntu/peaceinourtime\n\n\n\n\n# Required install for console\nsudo http_proxy=http://tstark:pssecrocks@172.16.245.222:8888 apt update\nsudo http_proxy=http://tstark:pssecrocks@172.16.245.222:8888 apt -y install ec2-instance-connect\nsudo http_proxy=http://tstark:pssecrocks@172.16.245.222:8888 apt -y install git\n#Pull down lab docs(included calico.yaml)\ngit -c http.proxy=\"http://tstark:pssecrocks@172.16.245.222:8888\" clone https://github.com/ps-interactive/lab_kubernetes_install_config_fundamentals.git /home/ubuntu/LAB_FILES\n\n##################################################################################################################################################################################################################\n\n##################################################################################################################################################################################################################\n#####################################################################################################CONTENT AUTHORING############################################################################################\n##################################################################################################################################################################################################################\n# Install additionally required software packages\n#sudo http_proxy=http://tstark:pssecrocks@172.16.245.222:8888 apt -y install git\n#sudo curl --proxy http://tstark:pssecrocks@172.16.245.222:8888 https://raw.githubusercontent.com/rapid7/metasploit-omnibus/master/config/templates/metasploit-framework-wrappers/msfupdate.erb \u003e\u003e /home/ubuntu/msfinstall 2\u003eerrors\n#sudo chmod 755 /home/ubuntu/msfinstall\n#sudo http_proxy=http://tstark:pssecrocks@172.16.245.222:8888 ./home/ubuntu/msfinstall\n\n# Pull git repo for lab\n\n\n\n#If a two way proxy is required enable the following code to allow access external to local ports\n\n\necho \"Happy Hunting\"\u003e\u003e /home/ubuntu/peaceinourtime",
            "template": "#! /bin/bash\n\n#################################################################################################Pluralsight Editing Only###########################################################################################\n\n#timesyncd attempts to reach out to ntp.ubuntu.com but hangs because it gets not response, this will speed up overall loadtime.\nsystemctl stop systemd-timesyncd\nsystemctl disable systemd-timesyncd\n# waits for proxy to be up and logs to script.test\necho \"begin proxy test\" \u003e\u003e script.test\nresponse=\\$$(sudo http_proxy=http://tstark:pssecrocks@172.16.245.222:8888 curl --write-out '%%{http_code}' --silent --output /dev/null www.google.com)\nwhile [ \\$$response -ne \"200\" ]; do\n    echo \\$$response \u003e\u003e script.test\n    sleep 10\n    response=\\$$(sudo http_proxy=http://tstark:pssecrocks@172.16.245.222:8888 curl --write-out '%%{http_code}' --silent --output /dev/null www.google.com)\ndone\n#once a positive 200 response is provided throughthe proxy to google, the peaceinourtime file is reated in the home folder. Note that the other files are created in the root folder.\necho \"success\"\u003e\u003e /home/ubuntu/peaceinourtime\n\n\n\n\n# Required install for console\nsudo http_proxy=http://tstark:pssecrocks@172.16.245.222:8888 apt update\nsudo http_proxy=http://tstark:pssecrocks@172.16.245.222:8888 apt -y install ec2-instance-connect\nsudo http_proxy=http://tstark:pssecrocks@172.16.245.222:8888 apt -y install git\n#Pull down lab docs(included calico.yaml)\ngit -c http.proxy=\"http://tstark:pssecrocks@172.16.245.222:8888\" clone https://github.com/ps-interactive/lab_kubernetes_install_config_fundamentals.git /home/ubuntu/LAB_FILES\n\n##################################################################################################################################################################################################################\n\n##################################################################################################################################################################################################################\n#####################################################################################################CONTENT AUTHORING############################################################################################\n##################################################################################################################################################################################################################\n# Install additionally required software packages\n#sudo http_proxy=http://tstark:pssecrocks@172.16.245.222:8888 apt -y install git\n#sudo curl --proxy http://tstark:pssecrocks@172.16.245.222:8888 https://raw.githubusercontent.com/rapid7/metasploit-omnibus/master/config/templates/metasploit-framework-wrappers/msfupdate.erb \u003e\u003e /home/ubuntu/msfinstall 2\u003eerrors\n#sudo chmod 755 /home/ubuntu/msfinstall\n#sudo http_proxy=http://tstark:pssecrocks@172.16.245.222:8888 ./home/ubuntu/msfinstall\n\n# Pull git repo for lab\n\n\n\n#If a two way proxy is required enable the following code to allow access external to local ports\n\n\necho \"Happy Hunting\"\u003e\u003e /home/ubuntu/peaceinourtime",
            "vars": null
          }
        }
      ]
    },
    {
      "mode": "data",
      "type": "template_file",
      "name": "nix-ssh-node1",
      "provider": "provider.template",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "filename": null,
            "id": "4b2517ad67ac3e830455bd8b1638bb3a29b6386930c1d3e1706b5c3a4ea4c297",
            "rendered": "#! /bin/bash\n\n#################################################################################################Pluralsight Editing Only###########################################################################################\n\n#timesyncd attempts to reach out to ntp.ubuntu.com but hangs because it gets not response, this will speed up overall loadtime.\nsystemctl stop systemd-timesyncd\nsystemctl disable systemd-timesyncd\n# waits for proxy to be up and logs to script.test\necho \"begin proxy test\" \u003e\u003e script.test\nresponse=\\$$(sudo http_proxy=http://tstark:pssecrocks@172.16.245.222:8888 curl --write-out '%{http_code}' --silent --output /dev/null www.google.com)\nwhile [ \\$$response -ne \"200\" ]; do\n    echo \\$$response \u003e\u003e script.test\n    sleep 10\n    response=\\$$(sudo http_proxy=http://tstark:pssecrocks@172.16.245.222:8888 curl --write-out '%{http_code}' --silent --output /dev/null www.google.com)\ndone\n#once a positive 200 response is provided throughthe proxy to google, the peaceinourtime file is reated in the home folder. Note that the other files are created in the root folder.\necho \"success\"\u003e\u003e /home/ubuntu/peaceinourtime\n\n\n\n\n# Required install for console\nsudo http_proxy=http://tstark:pssecrocks@172.16.245.222:8888 apt update\nsudo http_proxy=http://tstark:pssecrocks@172.16.245.222:8888 apt -y install ec2-instance-connect\n\n##################################################################################################################################################################################################################\n\n##################################################################################################################################################################################################################\n#####################################################################################################CONTENT AUTHORING############################################################################################\n##################################################################################################################################################################################################################\n# Install additionally required software packages\n#sudo http_proxy=http://tstark:pssecrocks@172.16.245.222:8888 apt -y install git\n#sudo curl --proxy http://tstark:pssecrocks@172.16.245.222:8888 https://raw.githubusercontent.com/rapid7/metasploit-omnibus/master/config/templates/metasploit-framework-wrappers/msfupdate.erb \u003e\u003e /home/ubuntu/msfinstall 2\u003eerrors\n#sudo chmod 755 /home/ubuntu/msfinstall\n#sudo http_proxy=http://tstark:pssecrocks@172.16.245.222:8888 ./home/ubuntu/msfinstall\n\n# Pull git repo for lab\n#git -c http.proxy=\"http://tstark:pssecrocks@172.16.245.222:8888\" clone https://github.com/arosenmund/ps-metasploit-lab.git /home/ubuntu/lab\n\n\n#If a two way proxy is required enable the following code to allow access external to local ports\n\n\necho \"Happy Hunting\"\u003e\u003e /home/ubuntu/peaceinourtime",
            "template": "#! /bin/bash\n\n#################################################################################################Pluralsight Editing Only###########################################################################################\n\n#timesyncd attempts to reach out to ntp.ubuntu.com but hangs because it gets not response, this will speed up overall loadtime.\nsystemctl stop systemd-timesyncd\nsystemctl disable systemd-timesyncd\n# waits for proxy to be up and logs to script.test\necho \"begin proxy test\" \u003e\u003e script.test\nresponse=\\$$(sudo http_proxy=http://tstark:pssecrocks@172.16.245.222:8888 curl --write-out '%%{http_code}' --silent --output /dev/null www.google.com)\nwhile [ \\$$response -ne \"200\" ]; do\n    echo \\$$response \u003e\u003e script.test\n    sleep 10\n    response=\\$$(sudo http_proxy=http://tstark:pssecrocks@172.16.245.222:8888 curl --write-out '%%{http_code}' --silent --output /dev/null www.google.com)\ndone\n#once a positive 200 response is provided throughthe proxy to google, the peaceinourtime file is reated in the home folder. Note that the other files are created in the root folder.\necho \"success\"\u003e\u003e /home/ubuntu/peaceinourtime\n\n\n\n\n# Required install for console\nsudo http_proxy=http://tstark:pssecrocks@172.16.245.222:8888 apt update\nsudo http_proxy=http://tstark:pssecrocks@172.16.245.222:8888 apt -y install ec2-instance-connect\n\n##################################################################################################################################################################################################################\n\n##################################################################################################################################################################################################################\n#####################################################################################################CONTENT AUTHORING############################################################################################\n##################################################################################################################################################################################################################\n# Install additionally required software packages\n#sudo http_proxy=http://tstark:pssecrocks@172.16.245.222:8888 apt -y install git\n#sudo curl --proxy http://tstark:pssecrocks@172.16.245.222:8888 https://raw.githubusercontent.com/rapid7/metasploit-omnibus/master/config/templates/metasploit-framework-wrappers/msfupdate.erb \u003e\u003e /home/ubuntu/msfinstall 2\u003eerrors\n#sudo chmod 755 /home/ubuntu/msfinstall\n#sudo http_proxy=http://tstark:pssecrocks@172.16.245.222:8888 ./home/ubuntu/msfinstall\n\n# Pull git repo for lab\n#git -c http.proxy=\"http://tstark:pssecrocks@172.16.245.222:8888\" clone https://github.com/arosenmund/ps-metasploit-lab.git /home/ubuntu/lab\n\n\n#If a two way proxy is required enable the following code to allow access external to local ports\n\n\necho \"Happy Hunting\"\u003e\u003e /home/ubuntu/peaceinourtime",
            "vars": null
          }
        }
      ]
    },
    {
      "mode": "data",
      "type": "template_file",
      "name": "nix-ssh-node2",
      "provider": "provider.template",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "filename": null,
            "id": "4b2517ad67ac3e830455bd8b1638bb3a29b6386930c1d3e1706b5c3a4ea4c297",
            "rendered": "#! /bin/bash\n\n#################################################################################################Pluralsight Editing Only###########################################################################################\n\n#timesyncd attempts to reach out to ntp.ubuntu.com but hangs because it gets not response, this will speed up overall loadtime.\nsystemctl stop systemd-timesyncd\nsystemctl disable systemd-timesyncd\n# waits for proxy to be up and logs to script.test\necho \"begin proxy test\" \u003e\u003e script.test\nresponse=\\$$(sudo http_proxy=http://tstark:pssecrocks@172.16.245.222:8888 curl --write-out '%{http_code}' --silent --output /dev/null www.google.com)\nwhile [ \\$$response -ne \"200\" ]; do\n    echo \\$$response \u003e\u003e script.test\n    sleep 10\n    response=\\$$(sudo http_proxy=http://tstark:pssecrocks@172.16.245.222:8888 curl --write-out '%{http_code}' --silent --output /dev/null www.google.com)\ndone\n#once a positive 200 response is provided throughthe proxy to google, the peaceinourtime file is reated in the home folder. Note that the other files are created in the root folder.\necho \"success\"\u003e\u003e /home/ubuntu/peaceinourtime\n\n\n\n\n# Required install for console\nsudo http_proxy=http://tstark:pssecrocks@172.16.245.222:8888 apt update\nsudo http_proxy=http://tstark:pssecrocks@172.16.245.222:8888 apt -y install ec2-instance-connect\n\n##################################################################################################################################################################################################################\n\n##################################################################################################################################################################################################################\n#####################################################################################################CONTENT AUTHORING############################################################################################\n##################################################################################################################################################################################################################\n# Install additionally required software packages\n#sudo http_proxy=http://tstark:pssecrocks@172.16.245.222:8888 apt -y install git\n#sudo curl --proxy http://tstark:pssecrocks@172.16.245.222:8888 https://raw.githubusercontent.com/rapid7/metasploit-omnibus/master/config/templates/metasploit-framework-wrappers/msfupdate.erb \u003e\u003e /home/ubuntu/msfinstall 2\u003eerrors\n#sudo chmod 755 /home/ubuntu/msfinstall\n#sudo http_proxy=http://tstark:pssecrocks@172.16.245.222:8888 ./home/ubuntu/msfinstall\n\n# Pull git repo for lab\n#git -c http.proxy=\"http://tstark:pssecrocks@172.16.245.222:8888\" clone https://github.com/arosenmund/ps-metasploit-lab.git /home/ubuntu/lab\n\n\n#If a two way proxy is required enable the following code to allow access external to local ports\n\n\necho \"Happy Hunting\"\u003e\u003e /home/ubuntu/peaceinourtime",
            "template": "#! /bin/bash\n\n#################################################################################################Pluralsight Editing Only###########################################################################################\n\n#timesyncd attempts to reach out to ntp.ubuntu.com but hangs because it gets not response, this will speed up overall loadtime.\nsystemctl stop systemd-timesyncd\nsystemctl disable systemd-timesyncd\n# waits for proxy to be up and logs to script.test\necho \"begin proxy test\" \u003e\u003e script.test\nresponse=\\$$(sudo http_proxy=http://tstark:pssecrocks@172.16.245.222:8888 curl --write-out '%%{http_code}' --silent --output /dev/null www.google.com)\nwhile [ \\$$response -ne \"200\" ]; do\n    echo \\$$response \u003e\u003e script.test\n    sleep 10\n    response=\\$$(sudo http_proxy=http://tstark:pssecrocks@172.16.245.222:8888 curl --write-out '%%{http_code}' --silent --output /dev/null www.google.com)\ndone\n#once a positive 200 response is provided throughthe proxy to google, the peaceinourtime file is reated in the home folder. Note that the other files are created in the root folder.\necho \"success\"\u003e\u003e /home/ubuntu/peaceinourtime\n\n\n\n\n# Required install for console\nsudo http_proxy=http://tstark:pssecrocks@172.16.245.222:8888 apt update\nsudo http_proxy=http://tstark:pssecrocks@172.16.245.222:8888 apt -y install ec2-instance-connect\n\n##################################################################################################################################################################################################################\n\n##################################################################################################################################################################################################################\n#####################################################################################################CONTENT AUTHORING############################################################################################\n##################################################################################################################################################################################################################\n# Install additionally required software packages\n#sudo http_proxy=http://tstark:pssecrocks@172.16.245.222:8888 apt -y install git\n#sudo curl --proxy http://tstark:pssecrocks@172.16.245.222:8888 https://raw.githubusercontent.com/rapid7/metasploit-omnibus/master/config/templates/metasploit-framework-wrappers/msfupdate.erb \u003e\u003e /home/ubuntu/msfinstall 2\u003eerrors\n#sudo chmod 755 /home/ubuntu/msfinstall\n#sudo http_proxy=http://tstark:pssecrocks@172.16.245.222:8888 ./home/ubuntu/msfinstall\n\n# Pull git repo for lab\n#git -c http.proxy=\"http://tstark:pssecrocks@172.16.245.222:8888\" clone https://github.com/arosenmund/ps-metasploit-lab.git /home/ubuntu/lab\n\n\n#If a two way proxy is required enable the following code to allow access external to local ports\n\n\necho \"Happy Hunting\"\u003e\u003e /home/ubuntu/peaceinourtime",
            "vars": null
          }
        }
      ]
    },
    {
      "mode": "data",
      "type": "template_file",
      "name": "nix-ssh-node3",
      "provider": "provider.template",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "filename": null,
            "id": "4b2517ad67ac3e830455bd8b1638bb3a29b6386930c1d3e1706b5c3a4ea4c297",
            "rendered": "#! /bin/bash\n\n#################################################################################################Pluralsight Editing Only###########################################################################################\n\n#timesyncd attempts to reach out to ntp.ubuntu.com but hangs because it gets not response, this will speed up overall loadtime.\nsystemctl stop systemd-timesyncd\nsystemctl disable systemd-timesyncd\n# waits for proxy to be up and logs to script.test\necho \"begin proxy test\" \u003e\u003e script.test\nresponse=\\$$(sudo http_proxy=http://tstark:pssecrocks@172.16.245.222:8888 curl --write-out '%{http_code}' --silent --output /dev/null www.google.com)\nwhile [ \\$$response -ne \"200\" ]; do\n    echo \\$$response \u003e\u003e script.test\n    sleep 10\n    response=\\$$(sudo http_proxy=http://tstark:pssecrocks@172.16.245.222:8888 curl --write-out '%{http_code}' --silent --output /dev/null www.google.com)\ndone\n#once a positive 200 response is provided throughthe proxy to google, the peaceinourtime file is reated in the home folder. Note that the other files are created in the root folder.\necho \"success\"\u003e\u003e /home/ubuntu/peaceinourtime\n\n\n\n\n# Required install for console\nsudo http_proxy=http://tstark:pssecrocks@172.16.245.222:8888 apt update\nsudo http_proxy=http://tstark:pssecrocks@172.16.245.222:8888 apt -y install ec2-instance-connect\n\n##################################################################################################################################################################################################################\n\n##################################################################################################################################################################################################################\n#####################################################################################################CONTENT AUTHORING############################################################################################\n##################################################################################################################################################################################################################\n# Install additionally required software packages\n#sudo http_proxy=http://tstark:pssecrocks@172.16.245.222:8888 apt -y install git\n#sudo curl --proxy http://tstark:pssecrocks@172.16.245.222:8888 https://raw.githubusercontent.com/rapid7/metasploit-omnibus/master/config/templates/metasploit-framework-wrappers/msfupdate.erb \u003e\u003e /home/ubuntu/msfinstall 2\u003eerrors\n#sudo chmod 755 /home/ubuntu/msfinstall\n#sudo http_proxy=http://tstark:pssecrocks@172.16.245.222:8888 ./home/ubuntu/msfinstall\n\n# Pull git repo for lab\n#git -c http.proxy=\"http://tstark:pssecrocks@172.16.245.222:8888\" clone https://github.com/arosenmund/ps-metasploit-lab.git /home/ubuntu/lab\n\n\n#If a two way proxy is required enable the following code to allow access external to local ports\n\n\necho \"Happy Hunting\"\u003e\u003e /home/ubuntu/peaceinourtime",
            "template": "#! /bin/bash\n\n#################################################################################################Pluralsight Editing Only###########################################################################################\n\n#timesyncd attempts to reach out to ntp.ubuntu.com but hangs because it gets not response, this will speed up overall loadtime.\nsystemctl stop systemd-timesyncd\nsystemctl disable systemd-timesyncd\n# waits for proxy to be up and logs to script.test\necho \"begin proxy test\" \u003e\u003e script.test\nresponse=\\$$(sudo http_proxy=http://tstark:pssecrocks@172.16.245.222:8888 curl --write-out '%%{http_code}' --silent --output /dev/null www.google.com)\nwhile [ \\$$response -ne \"200\" ]; do\n    echo \\$$response \u003e\u003e script.test\n    sleep 10\n    response=\\$$(sudo http_proxy=http://tstark:pssecrocks@172.16.245.222:8888 curl --write-out '%%{http_code}' --silent --output /dev/null www.google.com)\ndone\n#once a positive 200 response is provided throughthe proxy to google, the peaceinourtime file is reated in the home folder. Note that the other files are created in the root folder.\necho \"success\"\u003e\u003e /home/ubuntu/peaceinourtime\n\n\n\n\n# Required install for console\nsudo http_proxy=http://tstark:pssecrocks@172.16.245.222:8888 apt update\nsudo http_proxy=http://tstark:pssecrocks@172.16.245.222:8888 apt -y install ec2-instance-connect\n\n##################################################################################################################################################################################################################\n\n##################################################################################################################################################################################################################\n#####################################################################################################CONTENT AUTHORING############################################################################################\n##################################################################################################################################################################################################################\n# Install additionally required software packages\n#sudo http_proxy=http://tstark:pssecrocks@172.16.245.222:8888 apt -y install git\n#sudo curl --proxy http://tstark:pssecrocks@172.16.245.222:8888 https://raw.githubusercontent.com/rapid7/metasploit-omnibus/master/config/templates/metasploit-framework-wrappers/msfupdate.erb \u003e\u003e /home/ubuntu/msfinstall 2\u003eerrors\n#sudo chmod 755 /home/ubuntu/msfinstall\n#sudo http_proxy=http://tstark:pssecrocks@172.16.245.222:8888 ./home/ubuntu/msfinstall\n\n# Pull git repo for lab\n#git -c http.proxy=\"http://tstark:pssecrocks@172.16.245.222:8888\" clone https://github.com/arosenmund/ps-metasploit-lab.git /home/ubuntu/lab\n\n\n#If a two way proxy is required enable the following code to allow access external to local ports\n\n\necho \"Happy Hunting\"\u003e\u003e /home/ubuntu/peaceinourtime",
            "vars": null
          }
        }
      ]
    },
    {
      "mode": "data",
      "type": "template_file",
      "name": "ps-guac",
      "provider": "provider.template",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "filename": null,
            "id": "5fa965fc5072483abc45004c4a7565f915ffee12b80d5e74f8f39ad41601544e",
            "rendered": "#! /bin/bash\n\n#timesyncd attempts to reach out to ntp.ubuntu.com but hangs because it gets not response, this will speed up overall loadtime.\nsystemctl stop systemd-timesyncd\nsystemctl disable systemd-timesyncd\n\n\n#standard proxy ready check before attempts to install #####################################################################################################\necho \"begin proxy test\" \u003e\u003e script.test\nresponse=\\$$(sudo http_proxy=http://tstark:pssecrocks@172.16.245.222:8888 curl --write-out '%{http_code}' --silent --output /dev/null www.google.com)\nwhile [ \\$$response -ne \"200\" ]; do\n    echo \\$$response \u003e\u003e script.test\n    sleep 10\n    response=\\$$(sudo http_proxy=http://tstark:pssecrocks@172.16.245.222:8888 curl --write-out '%{http_code}' --silent --output /dev/null www.google.com)\ndone\n############################################################################################################################################################\n\necho \"success1\"\u003e\u003e ~/peaceinourtime\n# Update repo\nsudo http_proxy=http://tstark:pssecrocks@172.16.245.222:8888 apt update\n\n# In this solution this can remain until the end when it needs to be uninstalled.\nsudo http_proxy=http://tstark:pssecrocks@172.16.245.222:8888 apt -y install ec2-instance-connect\n\n# Install guac dependencies - list here has been validated to support all required guac capabilites 1-26-2021 AES\nsudo http_proxy=http://tstark:pssecrocks@172.16.245.222:8888 DEBIAN_FRONTEND=noninteractive apt -y --force-yes install build-essential libcairo2-dev libjpeg-turbo8-dev libpng-dev libtool-bin libossp-uuid-dev libvncserver-dev freerdp2-dev libssh2-1-dev libtelnet-dev libwebsockets-dev libpulse-dev libvorbis-dev libwebp-dev libssl-dev libpango1.0-dev libswscale-dev libavcodec-dev libavutil-dev libavformat-dev git\n\n#standard github project pull pull can be replaced with pluralsights github\n\nsudo git -c http.proxy=\"http://tstark:pssecrocks@172.16.245.222:8888\" clone https://github.com/arosenmund/ps-newterra-poc.git /home/ubuntu/ps-newterra-poc\n#update to use same github as the project so we can have a custom usermapping file with variables that are consistently replaced.  Not the final solution, need to switchup after making modular solution...maybe generate xml file with creator\n\n# download gucamole server\nsudo http_proxy=http://tstark:pssecrocks@172.16.245.222:8888 wget https://mirrors.sonic.net/apache/guacamole/1.3.0/source/guacamole-server-1.3.0.tar.gz\ntar -xvf guacamole-server-1.3.0.tar.gz\n\n#move it so you know where it is, commands run as root in \"/\" always us absolute references\nsudo mv guacamole-server-1.3.0 /opt/guacamole-server\nsudo autoreconf -vfi\ncd /opt/guacamole-server #watch this, the cwd may not operate properly here\nsudo ./configure --with-init-dir=/etc/init.d\nsudo make\n\n### IT IS VERY LIKEY I WILL SIMPLY DOWNLOAD FROM THIS POINT, ALREADY COMPILED ON A UBUNTU 20.04 SYSTEM###Need to test the speed.\n\nsudo make install\nsudo ldconfig\nsudo systemctl daemon-reload\nsudo systemctl start guacd\nsudo systemctl enable guacd\n\n\n\n############NEED APACHE TOMCAT APPLLET WAR############\n\n#Install Apache Tomcat\n\nsudo http_proxy=http://tstark:pssecrocks@172.16.245.222:8888 apt -y install tomcat9 tomcat9-admin tomcat9-common tomcat9-user\n#This auto starts and is listenting on port 8080  check with sudo ss -lnpt | grep java\n\n\n# Download the already compiled war file for the 1.3 client and move to /var/kib/tomcat9/webapps\n\nsudo http_proxy=http://tstark:pssecrocks@172.16.245.222:8888 wget https://mirror.olnevhost.net/pub/apache/guacamole/1.3.0/binary/guacamole-1.3.0.war\n\n# Future capability for \"single click\" will require the use of the header authentication module that will need to be added to an \"extensions folder\"  \n\nsudo mv guacamole-1.3.0.war /var/lib/tomcat9/webapps/guacamole.war\n\nsudo systemctl restart tomcat9 guacd\n\n# Configure guacamole \nsudo mkdir /etc/guacamole/\n#guacamole.properties is already configured\nsudo mv /home/ubuntu/ps-newterra-poc/configs/guacamole.properties /etc/guacamole/guacamole.properties\n\n##Configure user-mapping.xml befor moving to /etc/guacamole\n\n#var guac auth username (from randstring gen-un)\nsed 's/@guac_auth_username@/ps-student-cp8w/' -i /home/ubuntu/ps-newterra-poc/configs/user-mapping.xml\n\n\n#var guac auth password (from randstring gen-pw)\nsed 's/@guac_auth_password@/0c6mcsmn/' -i /home/ubuntu/ps-newterra-poc/configs/user-mapping.xml\n\n#var pki key for ssh un is ubuntu for u20\n#get key\nsudo wget https://securitylab-0c6mcsmn.s3-us-west-2.amazonaws.com/lab-key -O /home/ubuntu/lab-key\nsed  's|-----BEGIN RSA PRIVATE KEY-----|\u003cparam name=\\\"private-key\\\"\u003e-----BEGIN RSA PRIVATE KEY-----|' -i /home/ubuntu/lab-key\nsed  's|-----END RSA PRIVATE KEY-----|-----END RSA PRIVATE KEY-----\u003c/param\u003e|' -i /home/ubuntu/lab-key\nsed  -e \"/@ssh_pki_key@/r /home/ubuntu/lab-key\" -i /home/ubuntu/ps-newterra-poc/configs/user-mapping.xml\nsed 's|\u003cparam name=\\\"private-key\\\"\u003e@ssh_pki_key@\u003c/param\u003e||'  -i /home/ubuntu/ps-newterra-poc/configs/user-mapping.xml\n#sed 's/@ssh_pki_key@//' -i /home/ubuntu/ps-newterra-poc/configs/user-mapping.xml\n#var internal-ip for u20 console\nsed 's/@ssh_console_internal_ip@/172.16.94.10/' -i  /home/ubuntu/ps-newterra-poc/configs/user-mapping.xml\n\n#var internal-ip for w2019 rdp console\nsed 's/@win_rdp_internal_ip@/172.16.94.72/' -i  /home/ubuntu/ps-newterra-poc/configs/user-mapping.xml\n\n#var rdp password un is administrator (from randstring gen-pw) also used in userdata ps for w2019\nsed 's/@win_rdp_password@/eot10@XSJghePSHl/' -i  /home/ubuntu/ps-newterra-poc/configs/user-mapping.xml\n\n# move user-mapping.xml to correct config location\nsudo mv /home/ubuntu/ps-newterra-poc/configs/user-mapping.xml /etc/guacamole/user-mapping.xml\n\n## remember the pki private key for ssh is stored on the s3 bucket...however if this becomes overly complicated, you can create a local un:pw for ssh auth also\n\n################################\n\nsudo cp /home/ubuntu/ps-newterra-poc/\n\nsudo systemctl restart tomcat9 guacd\n\n# Setup Apache Proxy\n\nsudo http_proxy=http://tstark:pssecrocks@172.16.245.222:8888 apt -y install apache2\nsudo a2enmod proxy proxy_http headers proxy_wstunnel\nsudo systemctl restart apache2\n\n# take from config guacamole.conf and add external ip!\n# Have to do this another way...read file from s3 bucket?\n#get external ip/dns name\ndig +short myip.opendns.com @resolver1.opendns.com \u003e external_ip\ncp external_ip /home/ubuntu/external_ip\nsed 's/\\./-/g' -i external_ip\nmyextip=`cat external_ip`\nsed 's/@public_dns_ip@/'$myextip'/' -i /home/ubuntu/ps-newterra-poc/configs/guacamole.conf\n\n#sed 's/@public_dns@/public_dns/'  -i /home/ubuntu/ps-newterra-poc/config/guacamole.conf\n#move the file to the correct location\nsudo mv /home/ubuntu/ps-newterra-poc/configs/guacamole.conf /etc/apache2/sites-available/guacamole.conf\n\n# Guacamole /etc/apache2/sites-available/guacamole.conf\n\nsudo a2ensite guacamole.conf\n\nsudo systemctl restart apache2\n\n# one more step to actually publish the site! # now you need to get the certificate running with cert bot mofo\n# sudo apt -y install certbot\n# sudo apt -y install python3-certbot-apache\n\n# Generated from the terraform!\n# sudo certbot --apache --agree-tos --redirect --hsts --staple-ocsp --email you@example.com -d localhost\n# Probably should add something about checking /var/log/syslog for \"final scriprs compelte\"\necho \"success2\"\u003e\u003e ~/peaceinourtime\n\n\n\n################################################################################################\n\n",
            "template": "#! /bin/bash\n\n#timesyncd attempts to reach out to ntp.ubuntu.com but hangs because it gets not response, this will speed up overall loadtime.\nsystemctl stop systemd-timesyncd\nsystemctl disable systemd-timesyncd\n\n\n#standard proxy ready check before attempts to install #####################################################################################################\necho \"begin proxy test\" \u003e\u003e script.test\nresponse=\\$$(sudo http_proxy=http://tstark:pssecrocks@172.16.245.222:8888 curl --write-out '%%{http_code}' --silent --output /dev/null www.google.com)\nwhile [ \\$$response -ne \"200\" ]; do\n    echo \\$$response \u003e\u003e script.test\n    sleep 10\n    response=\\$$(sudo http_proxy=http://tstark:pssecrocks@172.16.245.222:8888 curl --write-out '%%{http_code}' --silent --output /dev/null www.google.com)\ndone\n############################################################################################################################################################\n\necho \"success1\"\u003e\u003e ~/peaceinourtime\n# Update repo\nsudo http_proxy=http://tstark:pssecrocks@172.16.245.222:8888 apt update\n\n# In this solution this can remain until the end when it needs to be uninstalled.\nsudo http_proxy=http://tstark:pssecrocks@172.16.245.222:8888 apt -y install ec2-instance-connect\n\n# Install guac dependencies - list here has been validated to support all required guac capabilites 1-26-2021 AES\nsudo http_proxy=http://tstark:pssecrocks@172.16.245.222:8888 DEBIAN_FRONTEND=noninteractive apt -y --force-yes install build-essential libcairo2-dev libjpeg-turbo8-dev libpng-dev libtool-bin libossp-uuid-dev libvncserver-dev freerdp2-dev libssh2-1-dev libtelnet-dev libwebsockets-dev libpulse-dev libvorbis-dev libwebp-dev libssl-dev libpango1.0-dev libswscale-dev libavcodec-dev libavutil-dev libavformat-dev git\n\n#standard github project pull pull can be replaced with pluralsights github\n\nsudo git -c http.proxy=\"http://tstark:pssecrocks@172.16.245.222:8888\" clone https://github.com/arosenmund/ps-newterra-poc.git /home/ubuntu/ps-newterra-poc\n#update to use same github as the project so we can have a custom usermapping file with variables that are consistently replaced.  Not the final solution, need to switchup after making modular solution...maybe generate xml file with creator\n\n# download gucamole server\nsudo http_proxy=http://tstark:pssecrocks@172.16.245.222:8888 wget https://mirrors.sonic.net/apache/guacamole/1.3.0/source/guacamole-server-1.3.0.tar.gz\ntar -xvf guacamole-server-1.3.0.tar.gz\n\n#move it so you know where it is, commands run as root in \"/\" always us absolute references\nsudo mv guacamole-server-1.3.0 /opt/guacamole-server\nsudo autoreconf -vfi\ncd /opt/guacamole-server #watch this, the cwd may not operate properly here\nsudo ./configure --with-init-dir=/etc/init.d\nsudo make\n\n### IT IS VERY LIKEY I WILL SIMPLY DOWNLOAD FROM THIS POINT, ALREADY COMPILED ON A UBUNTU 20.04 SYSTEM###Need to test the speed.\n\nsudo make install\nsudo ldconfig\nsudo systemctl daemon-reload\nsudo systemctl start guacd\nsudo systemctl enable guacd\n\n\n\n############NEED APACHE TOMCAT APPLLET WAR############\n\n#Install Apache Tomcat\n\nsudo http_proxy=http://tstark:pssecrocks@172.16.245.222:8888 apt -y install tomcat9 tomcat9-admin tomcat9-common tomcat9-user\n#This auto starts and is listenting on port 8080  check with sudo ss -lnpt | grep java\n\n\n# Download the already compiled war file for the 1.3 client and move to /var/kib/tomcat9/webapps\n\nsudo http_proxy=http://tstark:pssecrocks@172.16.245.222:8888 wget https://mirror.olnevhost.net/pub/apache/guacamole/1.3.0/binary/guacamole-1.3.0.war\n\n# Future capability for \"single click\" will require the use of the header authentication module that will need to be added to an \"extensions folder\"  \n\nsudo mv guacamole-1.3.0.war /var/lib/tomcat9/webapps/guacamole.war\n\nsudo systemctl restart tomcat9 guacd\n\n# Configure guacamole \nsudo mkdir /etc/guacamole/\n#guacamole.properties is already configured\nsudo mv /home/ubuntu/ps-newterra-poc/configs/guacamole.properties /etc/guacamole/guacamole.properties\n\n##Configure user-mapping.xml befor moving to /etc/guacamole\n\n#var guac auth username (from randstring gen-un)\nsed 's/@guac_auth_username@/${guac_auth_username}/' -i /home/ubuntu/ps-newterra-poc/configs/user-mapping.xml\n\n\n#var guac auth password (from randstring gen-pw)\nsed 's/@guac_auth_password@/${guac_auth_password}/' -i /home/ubuntu/ps-newterra-poc/configs/user-mapping.xml\n\n#var pki key for ssh un is ubuntu for u20\n#get key\nsudo wget https://securitylab-${guac_auth_password}.s3-us-west-2.amazonaws.com/lab-key -O /home/ubuntu/lab-key\nsed  's|-----BEGIN RSA PRIVATE KEY-----|\u003cparam name=\\\"private-key\\\"\u003e-----BEGIN RSA PRIVATE KEY-----|' -i /home/ubuntu/lab-key\nsed  's|-----END RSA PRIVATE KEY-----|-----END RSA PRIVATE KEY-----\u003c/param\u003e|' -i /home/ubuntu/lab-key\nsed  -e \"/@ssh_pki_key@/r /home/ubuntu/lab-key\" -i /home/ubuntu/ps-newterra-poc/configs/user-mapping.xml\nsed 's|\u003cparam name=\\\"private-key\\\"\u003e@ssh_pki_key@\u003c/param\u003e||'  -i /home/ubuntu/ps-newterra-poc/configs/user-mapping.xml\n#sed 's/@ssh_pki_key@//' -i /home/ubuntu/ps-newterra-poc/configs/user-mapping.xml\n#var internal-ip for u20 console\nsed 's/@ssh_console_internal_ip@/${ssh_console_internal_ip}/' -i  /home/ubuntu/ps-newterra-poc/configs/user-mapping.xml\n\n#var internal-ip for w2019 rdp console\nsed 's/@win_rdp_internal_ip@/${win_rdp_internal_ip}/' -i  /home/ubuntu/ps-newterra-poc/configs/user-mapping.xml\n\n#var rdp password un is administrator (from randstring gen-pw) also used in userdata ps for w2019\nsed 's/@win_rdp_password@/${win_rdp_password}/' -i  /home/ubuntu/ps-newterra-poc/configs/user-mapping.xml\n\n# move user-mapping.xml to correct config location\nsudo mv /home/ubuntu/ps-newterra-poc/configs/user-mapping.xml /etc/guacamole/user-mapping.xml\n\n## remember the pki private key for ssh is stored on the s3 bucket...however if this becomes overly complicated, you can create a local un:pw for ssh auth also\n\n################################\n\nsudo cp /home/ubuntu/ps-newterra-poc/\n\nsudo systemctl restart tomcat9 guacd\n\n# Setup Apache Proxy\n\nsudo http_proxy=http://tstark:pssecrocks@172.16.245.222:8888 apt -y install apache2\nsudo a2enmod proxy proxy_http headers proxy_wstunnel\nsudo systemctl restart apache2\n\n# take from config guacamole.conf and add external ip!\n# Have to do this another way...read file from s3 bucket?\n#get external ip/dns name\ndig +short myip.opendns.com @resolver1.opendns.com \u003e external_ip\ncp external_ip /home/ubuntu/external_ip\nsed 's/\\./-/g' -i external_ip\nmyextip=`cat external_ip`\nsed 's/@public_dns_ip@/'$myextip'/' -i /home/ubuntu/ps-newterra-poc/configs/guacamole.conf\n\n#sed 's/@public_dns@/public_dns/'  -i /home/ubuntu/ps-newterra-poc/config/guacamole.conf\n#move the file to the correct location\nsudo mv /home/ubuntu/ps-newterra-poc/configs/guacamole.conf /etc/apache2/sites-available/guacamole.conf\n\n# Guacamole /etc/apache2/sites-available/guacamole.conf\n\nsudo a2ensite guacamole.conf\n\nsudo systemctl restart apache2\n\n# one more step to actually publish the site! # now you need to get the certificate running with cert bot mofo\n# sudo apt -y install certbot\n# sudo apt -y install python3-certbot-apache\n\n# Generated from the terraform!\n# sudo certbot --apache --agree-tos --redirect --hsts --staple-ocsp --email you@example.com -d localhost\n# Probably should add something about checking /var/log/syslog for \"final scriprs compelte\"\necho \"success2\"\u003e\u003e ~/peaceinourtime\n\n\n\n################################################################################################\n\n",
            "vars": {
              "guac_auth_password": "0c6mcsmn",
              "guac_auth_username": "ps-student-cp8w",
              "ssh_console_internal_ip": "172.16.94.10",
              "win_rdp_internal_ip": "172.16.94.72",
              "win_rdp_password": "eot10@XSJghePSHl"
            }
          }
        }
      ]
    },
    {
      "mode": "data",
      "type": "template_file",
      "name": "win-rdp-console",
      "provider": "provider.template",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "filename": null,
            "id": "9b6bc1fd1f84835ddef01b5b975dddea11510a380cdeb3d9952b790d822a734a",
            "rendered": "#! /bin/bash\r\n#timesyncd attempts to reach out to ntp.ubuntu.com but hangs because it gets not response, this will speed up overall loadtime.\r\n#systemctl stop systemd-timesyncd\r\n#systemctl disable systemd-timesyncd\r\n# waits for proxy to be up and logs to script.test\r\n#echo \"begin proxy test\" \u003e\u003e script.test\r\n#response=\\$$(sudo http_proxy=http://tstark:pssecrocks@172.16.245.222:8888 curl --write-out '%{http_code}' --silent --output /dev/null www.google.com)\r\n#while [ \\$$response -ne \"200\" ]; do\r\n#    echo \\$$response \u003e\u003e script.test\r\n#    sleep 10\r\n#    response=\\$$(sudo http_proxy=http://tstark:pssecrocks@172.16.245.222:8888 curl --write-out '%{http_code}' --silent --output /dev/null www.google.com)\r\n#done\r\n#once a positive 200 response is provided throughthe proxy to google, the peaceinourtime file is reated in the home folder. Note that the other files are created in the root folder.\r\n#echo \"success\"\u003e\u003e /home/ubuntu/peaceinourtime\r\n\r\n\r\n\r\n\r\n#beware of the need to escape characters that terraform uses. https://www.terraform.io/docs/configuration/expressions/strings.html\r\n\r\n\r\n\u003cpowershell\u003e\r\n#persist can work but each script that ran will need to check to see if it was successful or already done first.\r\n##proxy check\r\n#Function to pull the ssh key from the s3 bucket, this ssh key is the key used for ever EC2 instance and can be used for a depedency framework. *issues with DC use 4-17\r\nfunction key_pull () {\r\n    #must have cred_init ran prior to running this function in the same boot session!\r\n    invoke-webrequest -proxy http://172.16.245.222:8888 -proxyCredential $Global:proxy_credential -uri https://securitylab-0c6mcsmn.s3-us-west-2.amazonaws.com/lab-key -outfile \"c:\\ProgramData\\Amazon\\lab-key\"\r\n    $path = \"c:\\ProgramData\\Amazon\\lab-key\"\r\n    #this!\r\n    icacls.exe $path /reset\r\n    icacls.exe $path /inheritance:r\r\n    icacls.exe $path /GRANT \"$($env:USERNAME):(R)\"\r\n    icacls.exe $path /remove BUILTIN\\\\BUILTIN\r\n    #how to fix lab permissions :()\r\n}\r\n\r\nnet user Administrator eot10@XSJghePSHl\r\n$message2 = \"eot10@XSJghePSHl\"; $message2 |out-file -append c:/peacinourtime.txt\r\n\r\n#disable web protection\r\nfunction Disable-ieESC\r\n{\r\n    $AdminKey = “HKLM:\\SOFTWARE\\Microsoft\\Active Setup\\Installed Components\\{A509B1A7-37EF-4b3f-8CFC-4F3A74704073}\\”\r\n    $UserKey = “HKLM:\\SOFTWARE\\Microsoft\\Active Setup\\Installed Components\\{A509B1A8-37EF-4b3f-8CFC-4F3A74704073}\\” \r\n    Set-ItemProperty -Path $AdminKey -Name “IsInstalled” -Value 0\r\n    Set-ItemProperty -Path $UserKey -Name “IsInstalled” -Value 0\r\n    Stop-Process -Name Explorer\r\n    Write-Host “IE Enhanced Security Configuration (ESC) has been disabled.” -ForegroundColor Green\r\n}\r\nfunction remove_amznicons () {\r\n    remove-item \"c:\\Users\\Administrator\\Desktop\\EC2 Microsoft Windows Guide.website\"\r\n    remove-item \"c:\\Users\\Administrator\\Desktop\\EC2 Feedback.website\"\r\n}\r\n\r\nfunction clone_labgit ($gituri) {\r\n    refreshenv\r\n    #Always follow using \"LAB_FILE\" folder to then hold all conent the lab or this will fail\r\n    #Example - https://github.com/ps-interactive/lab_visualizing_network_traffic_wireshark.git\r\n    $gituri\r\n    $gitstub = $gituri.split(\"/\")[4].split(\".\")[0]\r\n    $gitstub \u003e\u003e c:\\peaceinourtime\r\n    $gitpath1 = 'c:\\Users\\Administrator\\Desktop\\'+$gitstub\r\n    $gitpath1 \u003e\u003e c:\\peaceinourtime\r\n    $gitlist = \"-c http.proxy=http://tstark:pssecrocks@172.16.245.222:8888 clone $gituri $gitpath1\"\r\n    $gitlist \u003e\u003e c:\\peacinourtime\r\n    try {start-process  -filepath 'C:\\Program Files\\git\\bin\\git.exe' -argumentlist $gitlist -wait -ErrorAction continue}catch{$_ \u003e\u003e c:\\peacinourtime }\r\n    $gitpath2 = 'C:\\Users\\Administrator\\Desktop\\'+$gitstub+'\\LAB_FILES\\'\r\n    $gitpath2 \u003e\u003e c:\\peacinourtime\r\n    copy-item -recurse $gitpath2 -destination 'c:\\Users\\Administrator\\Desktop\\'\r\n    remove-item -recurse -force $gitpath1\r\n}\r\n\r\nfunction cred_init()\r\n{\r\n    net user Administrator eot10@XSJghePSHl\r\n    $global:message2 = \"eot10@XSJghePSHl\"; $message2 |out-file -append c:/peaceinourtime.txt\r\n    $global:message3 = \"Local Administator Account PW : \" + $message2\r\n    #Establish Proxy Credentials\r\n    $global:puser = 'tstark'\r\n    $global:ppass = 'pssecrocks'\r\n    $global:psecpasswd = ConvertTo-SecureString $ppass -AsPlainText -Force\r\n    $global:proxy_credential = New-Object System.Management.Automation.PSCredential($puser, $psecpasswd)\r\n    [system.net.webrequest]::DefaultWebProxy = new-object system.net.webproxy('http://172.16.245.222:8888')\r\n    $global:webclient = New-Object System.Net.webclient\r\n    $global:webclient.Proxy.Credentials = $proxy_credential\r\n    #Establish local system credentails\r\n    $global:luser = \"Administrator\"\r\n    $global:lpass = \"eot10@XSJghePSHl\"\r\n    $global:lsecpasswd = ConvertTo-SecureString $lpass -AsPlainText -Force\r\n    $global:local_credential = New-Object System.Management.Automation.PSCredential($luser, $lsecpasswd)\r\n    $global:local_credential\r\n}\r\n\r\n#Main\r\nDisable-ieESC\r\n$message3 = \"IE Enhanced Security Disabled\"; $message3 | out-file c:/peaceinourtime.txt -append;\r\ncred_init\r\n#need if 200 or retry logic then move on\r\ninvoke-webrequest -Proxy http://172.16.245.222:8888 -uri https://chocolatey.org/install.ps1 -Verbose -ProxyCredential $Global:proxy_credential -OutFile install.ps1\r\n$env:chocolateyProxyLocation='http://tstark:pssecrocks@172.16.245.222:8888'\r\n$env:chocolateyProxyPassword='pssecrocks'\r\n$env:chocolateyProxyUser='tstark'\r\n./install.ps1\r\n###\r\nchoco install git -y --proxy=\"172.16.245.222:8888\" --proxy-user=\"tstark\" --proxy-password=\"pssecrocks\"\r\n\r\nclone_labgit 'https://github.com/ps-interactive/lab_kubernetes_install_config_fundamentals.git'\r\n\r\n##Installing things with choco with explicit proxy test is with wireshark\r\nchoco install vscode -y --proxy=\"172.16.245.222:8888\" --proxy-user=\"tstark\" --proxy-password=\"pssecrocks\"\r\nremove_amznicons\r\nkey_pull\r\ncopy-item \"c:\\programdata\\amazon\\lab-key\" \"c:\\Users\\Administrator\\Desktop\"\r\n$message = \"iambecomedeath\"; $message | out-file c:/peaceinourtime.txt;\r\n\r\n\u003c/powershell\u003e\r\n",
            "template": "#! /bin/bash\r\n#timesyncd attempts to reach out to ntp.ubuntu.com but hangs because it gets not response, this will speed up overall loadtime.\r\n#systemctl stop systemd-timesyncd\r\n#systemctl disable systemd-timesyncd\r\n# waits for proxy to be up and logs to script.test\r\n#echo \"begin proxy test\" \u003e\u003e script.test\r\n#response=\\$$(sudo http_proxy=http://tstark:pssecrocks@172.16.245.222:8888 curl --write-out '%%{http_code}' --silent --output /dev/null www.google.com)\r\n#while [ \\$$response -ne \"200\" ]; do\r\n#    echo \\$$response \u003e\u003e script.test\r\n#    sleep 10\r\n#    response=\\$$(sudo http_proxy=http://tstark:pssecrocks@172.16.245.222:8888 curl --write-out '%%{http_code}' --silent --output /dev/null www.google.com)\r\n#done\r\n#once a positive 200 response is provided throughthe proxy to google, the peaceinourtime file is reated in the home folder. Note that the other files are created in the root folder.\r\n#echo \"success\"\u003e\u003e /home/ubuntu/peaceinourtime\r\n\r\n\r\n\r\n\r\n#beware of the need to escape characters that terraform uses. https://www.terraform.io/docs/configuration/expressions/strings.html\r\n\r\n\r\n\u003cpowershell\u003e\r\n#persist can work but each script that ran will need to check to see if it was successful or already done first.\r\n##proxy check\r\n#Function to pull the ssh key from the s3 bucket, this ssh key is the key used for ever EC2 instance and can be used for a depedency framework. *issues with DC use 4-17\r\nfunction key_pull () {\r\n    #must have cred_init ran prior to running this function in the same boot session!\r\n    invoke-webrequest -proxy http://172.16.245.222:8888 -proxyCredential $Global:proxy_credential -uri https://securitylab-${guac_auth_password}.s3-us-west-2.amazonaws.com/lab-key -outfile \"c:\\ProgramData\\Amazon\\lab-key\"\r\n    $path = \"c:\\ProgramData\\Amazon\\lab-key\"\r\n    #this!\r\n    icacls.exe $path /reset\r\n    icacls.exe $path /inheritance:r\r\n    icacls.exe $path /GRANT \"$($env:USERNAME):(R)\"\r\n    icacls.exe $path /remove BUILTIN\\\\BUILTIN\r\n    #how to fix lab permissions :()\r\n}\r\n\r\nnet user Administrator ${win_rdp_password}\r\n$message2 = \"${win_rdp_password}\"; $message2 |out-file -append c:/peacinourtime.txt\r\n\r\n#disable web protection\r\nfunction Disable-ieESC\r\n{\r\n    $AdminKey = “HKLM:\\SOFTWARE\\Microsoft\\Active Setup\\Installed Components\\{A509B1A7-37EF-4b3f-8CFC-4F3A74704073}\\”\r\n    $UserKey = “HKLM:\\SOFTWARE\\Microsoft\\Active Setup\\Installed Components\\{A509B1A8-37EF-4b3f-8CFC-4F3A74704073}\\” \r\n    Set-ItemProperty -Path $AdminKey -Name “IsInstalled” -Value 0\r\n    Set-ItemProperty -Path $UserKey -Name “IsInstalled” -Value 0\r\n    Stop-Process -Name Explorer\r\n    Write-Host “IE Enhanced Security Configuration (ESC) has been disabled.” -ForegroundColor Green\r\n}\r\nfunction remove_amznicons () {\r\n    remove-item \"c:\\Users\\Administrator\\Desktop\\EC2 Microsoft Windows Guide.website\"\r\n    remove-item \"c:\\Users\\Administrator\\Desktop\\EC2 Feedback.website\"\r\n}\r\n\r\nfunction clone_labgit ($gituri) {\r\n    refreshenv\r\n    #Always follow using \"LAB_FILE\" folder to then hold all conent the lab or this will fail\r\n    #Example - https://github.com/ps-interactive/lab_visualizing_network_traffic_wireshark.git\r\n    $gituri\r\n    $gitstub = $gituri.split(\"/\")[4].split(\".\")[0]\r\n    $gitstub \u003e\u003e c:\\peaceinourtime\r\n    $gitpath1 = 'c:\\Users\\Administrator\\Desktop\\'+$gitstub\r\n    $gitpath1 \u003e\u003e c:\\peaceinourtime\r\n    $gitlist = \"-c http.proxy=http://tstark:pssecrocks@172.16.245.222:8888 clone $gituri $gitpath1\"\r\n    $gitlist \u003e\u003e c:\\peacinourtime\r\n    try {start-process  -filepath 'C:\\Program Files\\git\\bin\\git.exe' -argumentlist $gitlist -wait -ErrorAction continue}catch{$_ \u003e\u003e c:\\peacinourtime }\r\n    $gitpath2 = 'C:\\Users\\Administrator\\Desktop\\'+$gitstub+'\\LAB_FILES\\'\r\n    $gitpath2 \u003e\u003e c:\\peacinourtime\r\n    copy-item -recurse $gitpath2 -destination 'c:\\Users\\Administrator\\Desktop\\'\r\n    remove-item -recurse -force $gitpath1\r\n}\r\n\r\nfunction cred_init()\r\n{\r\n    net user Administrator ${win_rdp_password}\r\n    $global:message2 = \"${win_rdp_password}\"; $message2 |out-file -append c:/peaceinourtime.txt\r\n    $global:message3 = \"Local Administator Account PW : \" + $message2\r\n    #Establish Proxy Credentials\r\n    $global:puser = 'tstark'\r\n    $global:ppass = 'pssecrocks'\r\n    $global:psecpasswd = ConvertTo-SecureString $ppass -AsPlainText -Force\r\n    $global:proxy_credential = New-Object System.Management.Automation.PSCredential($puser, $psecpasswd)\r\n    [system.net.webrequest]::DefaultWebProxy = new-object system.net.webproxy('http://172.16.245.222:8888')\r\n    $global:webclient = New-Object System.Net.webclient\r\n    $global:webclient.Proxy.Credentials = $proxy_credential\r\n    #Establish local system credentails\r\n    $global:luser = \"Administrator\"\r\n    $global:lpass = \"${win_rdp_password}\"\r\n    $global:lsecpasswd = ConvertTo-SecureString $lpass -AsPlainText -Force\r\n    $global:local_credential = New-Object System.Management.Automation.PSCredential($luser, $lsecpasswd)\r\n    $global:local_credential\r\n}\r\n\r\n#Main\r\nDisable-ieESC\r\n$message3 = \"IE Enhanced Security Disabled\"; $message3 | out-file c:/peaceinourtime.txt -append;\r\ncred_init\r\n#need if 200 or retry logic then move on\r\ninvoke-webrequest -Proxy http://172.16.245.222:8888 -uri https://chocolatey.org/install.ps1 -Verbose -ProxyCredential $Global:proxy_credential -OutFile install.ps1\r\n$env:chocolateyProxyLocation='http://tstark:pssecrocks@172.16.245.222:8888'\r\n$env:chocolateyProxyPassword='pssecrocks'\r\n$env:chocolateyProxyUser='tstark'\r\n./install.ps1\r\n###\r\nchoco install git -y --proxy=\"172.16.245.222:8888\" --proxy-user=\"tstark\" --proxy-password=\"pssecrocks\"\r\n\r\nclone_labgit 'https://github.com/ps-interactive/lab_kubernetes_install_config_fundamentals.git'\r\n\r\n##Installing things with choco with explicit proxy test is with wireshark\r\nchoco install vscode -y --proxy=\"172.16.245.222:8888\" --proxy-user=\"tstark\" --proxy-password=\"pssecrocks\"\r\nremove_amznicons\r\nkey_pull\r\ncopy-item \"c:\\programdata\\amazon\\lab-key\" \"c:\\Users\\Administrator\\Desktop\"\r\n$message = \"iambecomedeath\"; $message | out-file c:/peaceinourtime.txt;\r\n\r\n\u003c/powershell\u003e\r\n",
            "vars": {
              "guac_auth_password": "0c6mcsmn",
              "win_rdp_password": "eot10@XSJghePSHl"
            }
          }
        }
      ]
    },
    {
      "mode": "managed",
      "type": "aws_instance",
      "name": "forward-proxy",
      "provider": "provider.aws",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "ami": "ami-0554443e7f55d3eeb",
            "arn": "arn:aws:ec2:us-west-2:363597930206:instance/i-039ae98cf5fb53383",
            "associate_public_ip_address": true,
            "availability_zone": "us-west-2a",
            "cpu_core_count": 1,
            "cpu_threads_per_core": 1,
            "credit_specification": [
              {
                "cpu_credits": "standard"
              }
            ],
            "disable_api_termination": false,
            "ebs_block_device": [],
            "ebs_optimized": false,
            "enclave_options": [
              {
                "enabled": false
              }
            ],
            "ephemeral_block_device": [],
            "get_password_data": false,
            "hibernation": false,
            "host_id": null,
            "iam_instance_profile": "",
            "id": "i-039ae98cf5fb53383",
            "instance_initiated_shutdown_behavior": null,
            "instance_state": "running",
            "instance_type": "t2.micro",
            "ipv6_address_count": 0,
            "ipv6_addresses": [],
            "key_name": "lab-key",
            "metadata_options": [
              {
                "http_endpoint": "enabled",
                "http_put_response_hop_limit": 1,
                "http_tokens": "optional"
              }
            ],
            "monitoring": false,
            "network_interface": [],
            "outpost_arn": "",
            "password_data": "",
            "placement_group": "",
            "primary_network_interface_id": "eni-03a1ed2cc2505f984",
            "private_dns": "ip-172-16-245-222.us-west-2.compute.internal",
            "private_ip": "172.16.245.222",
            "public_dns": "ec2-54-244-65-103.us-west-2.compute.amazonaws.com",
            "public_ip": "54.244.65.103",
            "root_block_device": [
              {
                "delete_on_termination": true,
                "device_name": "/dev/sda1",
                "encrypted": false,
                "iops": 100,
                "kms_key_id": "",
                "tags": {},
                "throughput": 0,
                "volume_id": "vol-0f60ce999f2e9e95e",
                "volume_size": 8,
                "volume_type": "gp2"
              }
            ],
            "secondary_private_ips": [],
            "security_groups": [],
            "source_dest_check": true,
            "subnet_id": "subnet-0fe559530d08ca9a5",
            "tags": {
              "Name": "forward-proxy"
            },
            "tenancy": "default",
            "timeouts": {
              "create": null,
              "delete": null,
              "update": null
            },
            "user_data": "9f323d83e58123ce8f61dc9622336b022fd8e459",
            "user_data_base64": null,
            "volume_tags": null,
            "vpc_security_group_ids": [
              "sg-02de87335978b4b94"
            ]
          },
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo2MDAwMDAwMDAwMDAsImRlbGV0ZSI6MTIwMDAwMDAwMDAwMCwidXBkYXRlIjo2MDAwMDAwMDAwMDB9LCJzY2hlbWFfdmVyc2lvbiI6IjEifQ==",
          "dependencies": [
            "aws_key_pair.terrakey",
            "aws_security_group.proxy",
            "aws_subnet.subnet_proxy",
            "aws_vpc.lab_vpc",
            "tls_private_key.pki"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "aws_instance",
      "name": "nix-ssh-console",
      "provider": "provider.aws",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "ami": "ami-090717c950a5c34d3",
            "arn": "arn:aws:ec2:us-west-2:363597930206:instance/i-0901bd5d658e50238",
            "associate_public_ip_address": true,
            "availability_zone": "us-west-2a",
            "cpu_core_count": 1,
            "cpu_threads_per_core": 1,
            "credit_specification": [
              {
                "cpu_credits": "standard"
              }
            ],
            "disable_api_termination": false,
            "ebs_block_device": [],
            "ebs_optimized": false,
            "enclave_options": [
              {
                "enabled": false
              }
            ],
            "ephemeral_block_device": [],
            "get_password_data": false,
            "hibernation": false,
            "host_id": null,
            "iam_instance_profile": "",
            "id": "i-0901bd5d658e50238",
            "instance_initiated_shutdown_behavior": null,
            "instance_state": "running",
            "instance_type": "t2.micro",
            "ipv6_address_count": 0,
            "ipv6_addresses": [],
            "key_name": "lab-key",
            "metadata_options": [
              {
                "http_endpoint": "enabled",
                "http_put_response_hop_limit": 1,
                "http_tokens": "optional"
              }
            ],
            "monitoring": false,
            "network_interface": [],
            "outpost_arn": "",
            "password_data": "",
            "placement_group": "",
            "primary_network_interface_id": "eni-01763a95b89884cd8",
            "private_dns": "ip-172-16-94-10.us-west-2.compute.internal",
            "private_ip": "172.16.94.10",
            "public_dns": "ec2-34-214-125-219.us-west-2.compute.amazonaws.com",
            "public_ip": "34.214.125.219",
            "root_block_device": [
              {
                "delete_on_termination": true,
                "device_name": "/dev/sda1",
                "encrypted": false,
                "iops": 100,
                "kms_key_id": "",
                "tags": {},
                "throughput": 0,
                "volume_id": "vol-0cdec7a93ae7981ea",
                "volume_size": 8,
                "volume_type": "gp2"
              }
            ],
            "secondary_private_ips": [],
            "security_groups": [],
            "source_dest_check": true,
            "subnet_id": "subnet-076bace13cfe7c164",
            "tags": {
              "Name": "c1-cp1"
            },
            "tenancy": "default",
            "timeouts": {
              "create": null,
              "delete": null,
              "update": null
            },
            "user_data": "4cde7a2cef166d1e8898083f9d9e76871b4ab570",
            "user_data_base64": null,
            "volume_tags": null,
            "vpc_security_group_ids": [
              "sg-0e88f92af1c2a8414"
            ]
          },
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo2MDAwMDAwMDAwMDAsImRlbGV0ZSI6MTIwMDAwMDAwMDAwMCwidXBkYXRlIjo2MDAwMDAwMDAwMDB9LCJzY2hlbWFfdmVyc2lvbiI6IjEifQ==",
          "dependencies": [
            "aws_key_pair.terrakey",
            "aws_security_group.ssh_console",
            "aws_subnet.subnet_consoles",
            "aws_vpc.lab_vpc",
            "tls_private_key.pki"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "aws_instance",
      "name": "nix-ssh-node1",
      "provider": "provider.aws",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "ami": "ami-090717c950a5c34d3",
            "arn": "arn:aws:ec2:us-west-2:363597930206:instance/i-0388ea6da44b034e1",
            "associate_public_ip_address": true,
            "availability_zone": "us-west-2a",
            "cpu_core_count": 1,
            "cpu_threads_per_core": 1,
            "credit_specification": [
              {
                "cpu_credits": "standard"
              }
            ],
            "disable_api_termination": false,
            "ebs_block_device": [],
            "ebs_optimized": false,
            "enclave_options": [
              {
                "enabled": false
              }
            ],
            "ephemeral_block_device": [],
            "get_password_data": false,
            "hibernation": false,
            "host_id": null,
            "iam_instance_profile": "",
            "id": "i-0388ea6da44b034e1",
            "instance_initiated_shutdown_behavior": null,
            "instance_state": "running",
            "instance_type": "t2.micro",
            "ipv6_address_count": 0,
            "ipv6_addresses": [],
            "key_name": "lab-key",
            "metadata_options": [
              {
                "http_endpoint": "enabled",
                "http_put_response_hop_limit": 1,
                "http_tokens": "optional"
              }
            ],
            "monitoring": false,
            "network_interface": [],
            "outpost_arn": "",
            "password_data": "",
            "placement_group": "",
            "primary_network_interface_id": "eni-0e1e7b9c9d0503ba2",
            "private_dns": "ip-172-16-94-11.us-west-2.compute.internal",
            "private_ip": "172.16.94.11",
            "public_dns": "ec2-54-185-188-102.us-west-2.compute.amazonaws.com",
            "public_ip": "54.185.188.102",
            "root_block_device": [
              {
                "delete_on_termination": true,
                "device_name": "/dev/sda1",
                "encrypted": false,
                "iops": 100,
                "kms_key_id": "",
                "tags": {},
                "throughput": 0,
                "volume_id": "vol-001815e6024e1425a",
                "volume_size": 8,
                "volume_type": "gp2"
              }
            ],
            "secondary_private_ips": [],
            "security_groups": [],
            "source_dest_check": true,
            "subnet_id": "subnet-076bace13cfe7c164",
            "tags": {
              "Name": "c1-node1"
            },
            "tenancy": "default",
            "timeouts": {
              "create": null,
              "delete": null,
              "update": null
            },
            "user_data": "d88f72869c75b3b827706c9bdce05ec03f77185a",
            "user_data_base64": null,
            "volume_tags": null,
            "vpc_security_group_ids": [
              "sg-0e88f92af1c2a8414"
            ]
          },
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo2MDAwMDAwMDAwMDAsImRlbGV0ZSI6MTIwMDAwMDAwMDAwMCwidXBkYXRlIjo2MDAwMDAwMDAwMDB9LCJzY2hlbWFfdmVyc2lvbiI6IjEifQ==",
          "dependencies": [
            "aws_key_pair.terrakey",
            "aws_security_group.ssh_console",
            "aws_subnet.subnet_consoles",
            "aws_vpc.lab_vpc",
            "tls_private_key.pki"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "aws_instance",
      "name": "nix-ssh-node2",
      "provider": "provider.aws",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "ami": "ami-090717c950a5c34d3",
            "arn": "arn:aws:ec2:us-west-2:363597930206:instance/i-0113a4b002790f508",
            "associate_public_ip_address": true,
            "availability_zone": "us-west-2a",
            "cpu_core_count": 1,
            "cpu_threads_per_core": 1,
            "credit_specification": [
              {
                "cpu_credits": "standard"
              }
            ],
            "disable_api_termination": false,
            "ebs_block_device": [],
            "ebs_optimized": false,
            "enclave_options": [
              {
                "enabled": false
              }
            ],
            "ephemeral_block_device": [],
            "get_password_data": false,
            "hibernation": false,
            "host_id": null,
            "iam_instance_profile": "",
            "id": "i-0113a4b002790f508",
            "instance_initiated_shutdown_behavior": null,
            "instance_state": "running",
            "instance_type": "t2.micro",
            "ipv6_address_count": 0,
            "ipv6_addresses": [],
            "key_name": "lab-key",
            "metadata_options": [
              {
                "http_endpoint": "enabled",
                "http_put_response_hop_limit": 1,
                "http_tokens": "optional"
              }
            ],
            "monitoring": false,
            "network_interface": [],
            "outpost_arn": "",
            "password_data": "",
            "placement_group": "",
            "primary_network_interface_id": "eni-0184469137d92bf10",
            "private_dns": "ip-172-16-94-12.us-west-2.compute.internal",
            "private_ip": "172.16.94.12",
            "public_dns": "ec2-34-221-142-56.us-west-2.compute.amazonaws.com",
            "public_ip": "34.221.142.56",
            "root_block_device": [
              {
                "delete_on_termination": true,
                "device_name": "/dev/sda1",
                "encrypted": false,
                "iops": 100,
                "kms_key_id": "",
                "tags": {},
                "throughput": 0,
                "volume_id": "vol-0ccf366579917c8a0",
                "volume_size": 8,
                "volume_type": "gp2"
              }
            ],
            "secondary_private_ips": [],
            "security_groups": [],
            "source_dest_check": true,
            "subnet_id": "subnet-076bace13cfe7c164",
            "tags": {
              "Name": "c1-node2"
            },
            "tenancy": "default",
            "timeouts": {
              "create": null,
              "delete": null,
              "update": null
            },
            "user_data": "d88f72869c75b3b827706c9bdce05ec03f77185a",
            "user_data_base64": null,
            "volume_tags": null,
            "vpc_security_group_ids": [
              "sg-0e88f92af1c2a8414"
            ]
          },
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo2MDAwMDAwMDAwMDAsImRlbGV0ZSI6MTIwMDAwMDAwMDAwMCwidXBkYXRlIjo2MDAwMDAwMDAwMDB9LCJzY2hlbWFfdmVyc2lvbiI6IjEifQ==",
          "dependencies": [
            "aws_key_pair.terrakey",
            "aws_security_group.ssh_console",
            "aws_subnet.subnet_consoles",
            "aws_vpc.lab_vpc",
            "tls_private_key.pki"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "aws_instance",
      "name": "nix-ssh-node3",
      "provider": "provider.aws",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "ami": "ami-090717c950a5c34d3",
            "arn": "arn:aws:ec2:us-west-2:363597930206:instance/i-09f5681049639534b",
            "associate_public_ip_address": true,
            "availability_zone": "us-west-2a",
            "cpu_core_count": 1,
            "cpu_threads_per_core": 1,
            "credit_specification": [
              {
                "cpu_credits": "standard"
              }
            ],
            "disable_api_termination": false,
            "ebs_block_device": [],
            "ebs_optimized": false,
            "enclave_options": [
              {
                "enabled": false
              }
            ],
            "ephemeral_block_device": [],
            "get_password_data": false,
            "hibernation": false,
            "host_id": null,
            "iam_instance_profile": "",
            "id": "i-09f5681049639534b",
            "instance_initiated_shutdown_behavior": null,
            "instance_state": "running",
            "instance_type": "t2.micro",
            "ipv6_address_count": 0,
            "ipv6_addresses": [],
            "key_name": "lab-key",
            "metadata_options": [
              {
                "http_endpoint": "enabled",
                "http_put_response_hop_limit": 1,
                "http_tokens": "optional"
              }
            ],
            "monitoring": false,
            "network_interface": [],
            "outpost_arn": "",
            "password_data": "",
            "placement_group": "",
            "primary_network_interface_id": "eni-099940baf44d5a15e",
            "private_dns": "ip-172-16-94-13.us-west-2.compute.internal",
            "private_ip": "172.16.94.13",
            "public_dns": "ec2-35-165-115-83.us-west-2.compute.amazonaws.com",
            "public_ip": "35.165.115.83",
            "root_block_device": [
              {
                "delete_on_termination": true,
                "device_name": "/dev/sda1",
                "encrypted": false,
                "iops": 100,
                "kms_key_id": "",
                "tags": {},
                "throughput": 0,
                "volume_id": "vol-0fc7040e1344abc78",
                "volume_size": 8,
                "volume_type": "gp2"
              }
            ],
            "secondary_private_ips": [],
            "security_groups": [],
            "source_dest_check": true,
            "subnet_id": "subnet-076bace13cfe7c164",
            "tags": {
              "Name": "c1-node3"
            },
            "tenancy": "default",
            "timeouts": {
              "create": null,
              "delete": null,
              "update": null
            },
            "user_data": "d88f72869c75b3b827706c9bdce05ec03f77185a",
            "user_data_base64": null,
            "volume_tags": null,
            "vpc_security_group_ids": [
              "sg-0e88f92af1c2a8414"
            ]
          },
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo2MDAwMDAwMDAwMDAsImRlbGV0ZSI6MTIwMDAwMDAwMDAwMCwidXBkYXRlIjo2MDAwMDAwMDAwMDB9LCJzY2hlbWFfdmVyc2lvbiI6IjEifQ==",
          "dependencies": [
            "aws_key_pair.terrakey",
            "aws_security_group.ssh_console",
            "aws_subnet.subnet_consoles",
            "aws_vpc.lab_vpc",
            "tls_private_key.pki"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "aws_instance",
      "name": "ps-guac",
      "provider": "provider.aws",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "ami": "ami-0554443e7f55d3eeb",
            "arn": "arn:aws:ec2:us-west-2:363597930206:instance/i-0d94edbace4b9a2b6",
            "associate_public_ip_address": true,
            "availability_zone": "us-west-2a",
            "cpu_core_count": 1,
            "cpu_threads_per_core": 1,
            "credit_specification": [
              {
                "cpu_credits": "standard"
              }
            ],
            "disable_api_termination": false,
            "ebs_block_device": [],
            "ebs_optimized": false,
            "enclave_options": [
              {
                "enabled": false
              }
            ],
            "ephemeral_block_device": [],
            "get_password_data": false,
            "hibernation": false,
            "host_id": null,
            "iam_instance_profile": "",
            "id": "i-0d94edbace4b9a2b6",
            "instance_initiated_shutdown_behavior": null,
            "instance_state": "running",
            "instance_type": "t2.micro",
            "ipv6_address_count": 0,
            "ipv6_addresses": [],
            "key_name": "lab-key",
            "metadata_options": [
              {
                "http_endpoint": "enabled",
                "http_put_response_hop_limit": 1,
                "http_tokens": "optional"
              }
            ],
            "monitoring": false,
            "network_interface": [],
            "outpost_arn": "",
            "password_data": "",
            "placement_group": "",
            "primary_network_interface_id": "eni-01bd6fac4a2c1d1bf",
            "private_dns": "ip-172-16-245-223.us-west-2.compute.internal",
            "private_ip": "172.16.245.223",
            "public_dns": "ec2-52-33-52-157.us-west-2.compute.amazonaws.com",
            "public_ip": "52.33.52.157",
            "root_block_device": [
              {
                "delete_on_termination": true,
                "device_name": "/dev/sda1",
                "encrypted": false,
                "iops": 100,
                "kms_key_id": "",
                "tags": {},
                "throughput": 0,
                "volume_id": "vol-05fc41c812c49aa9e",
                "volume_size": 8,
                "volume_type": "gp2"
              }
            ],
            "secondary_private_ips": [],
            "security_groups": [],
            "source_dest_check": true,
            "subnet_id": "subnet-0fe559530d08ca9a5",
            "tags": {
              "Name": "not-guac"
            },
            "tenancy": "default",
            "timeouts": {
              "create": null,
              "delete": null,
              "update": null
            },
            "user_data": "2df35201283a01a48c1857655fe8f5c333539f15",
            "user_data_base64": null,
            "volume_tags": null,
            "vpc_security_group_ids": [
              "sg-02de87335978b4b94"
            ]
          },
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo2MDAwMDAwMDAwMDAsImRlbGV0ZSI6MTIwMDAwMDAwMDAwMCwidXBkYXRlIjo2MDAwMDAwMDAwMDB9LCJzY2hlbWFfdmVyc2lvbiI6IjEifQ==",
          "dependencies": [
            "aws_instance.nix-ssh-console",
            "aws_instance.win-rdp-console",
            "aws_key_pair.terrakey",
            "aws_security_group.proxy",
            "aws_security_group.rdp_console",
            "aws_security_group.ssh_console",
            "aws_subnet.subnet_consoles",
            "aws_subnet.subnet_proxy",
            "aws_vpc.lab_vpc",
            "random_string.password",
            "random_string.user_name",
            "random_string.version",
            "tls_private_key.pki"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "aws_instance",
      "name": "win-rdp-console",
      "provider": "provider.aws",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "ami": "ami-0b7ebdd52b84c244d",
            "arn": "arn:aws:ec2:us-west-2:363597930206:instance/i-08e6d93e6fa71b831",
            "associate_public_ip_address": true,
            "availability_zone": "us-west-2a",
            "cpu_core_count": 2,
            "cpu_threads_per_core": 1,
            "credit_specification": [
              {
                "cpu_credits": "standard"
              }
            ],
            "disable_api_termination": false,
            "ebs_block_device": [],
            "ebs_optimized": false,
            "enclave_options": [
              {
                "enabled": false
              }
            ],
            "ephemeral_block_device": [],
            "get_password_data": true,
            "hibernation": false,
            "host_id": null,
            "iam_instance_profile": "",
            "id": "i-08e6d93e6fa71b831",
            "instance_initiated_shutdown_behavior": null,
            "instance_state": "running",
            "instance_type": "t2.medium",
            "ipv6_address_count": 0,
            "ipv6_addresses": [],
            "key_name": "lab-key",
            "metadata_options": [
              {
                "http_endpoint": "enabled",
                "http_put_response_hop_limit": 1,
                "http_tokens": "optional"
              }
            ],
            "monitoring": false,
            "network_interface": [],
            "outpost_arn": "",
            "password_data": "ob3zf8P7iqq+GWOpNqnoOe3krVQawcUq2gOO0EV4O5/DUNu671aCU9uCx6lssa5KHn9M9qylQeNxsFjBmGEl+U3GAbmM2py9aExNP00A4ziYa13sUi2yqkXxPsQ3zfzQahCQKHinR2nokY9gpSd4FVB4HpzAV2Q0a+b3rE1KLVtAloj9cM3v06THN7RCDgR4RN4/WEcOkpxyZreEchH5skXIWNFmZFlqwHuvRt2pnH/1Qyu6R9633m0JrleIs48RfhTgNLTm/CejRtRPQ51Q37DS8TNVPhUyD7IRedhXr7YhBsk/RNdZU/kOErfQoq1Bq3HtUNhLhevRRIEeUC6x50rqeppKgAlKNdqzF32WbU588lSQ/dBbWnGAip7DvET705wptHnK993C083FwOkHN8BJi3mRbQr0V3Dlxh27k/fF1GzaeS/TRlZxTctkuaiubiZV3DAMTO8istwjjVXYoPT70H3QeAfQyfDwhI/UEVGmP36a/gStTHE+uPfMXg3gaVjZy7GSqj6sHMQ5OUTNuY/1kWOxuFKFiKJ/DYSU/uLFX2FUBegwWP+V1U6lCgl5088pV1XMD71uy2ZPvufqILo9SVf+Lxc0PmrdppwWmELAXDcWVBsNboiohOuvawszTrC02hRqZ2aJ1uZNTa6teHAH9E882XTmnoc7QP0mOBk=",
            "placement_group": "",
            "primary_network_interface_id": "eni-0538d61dc98fb93aa",
            "private_dns": "ip-172-16-94-72.us-west-2.compute.internal",
            "private_ip": "172.16.94.72",
            "public_dns": "ec2-34-215-220-164.us-west-2.compute.amazonaws.com",
            "public_ip": "34.215.220.164",
            "root_block_device": [
              {
                "delete_on_termination": true,
                "device_name": "/dev/sda1",
                "encrypted": false,
                "iops": 100,
                "kms_key_id": "",
                "tags": {},
                "throughput": 0,
                "volume_id": "vol-0890ceaa6c963eccf",
                "volume_size": 30,
                "volume_type": "gp2"
              }
            ],
            "secondary_private_ips": [],
            "security_groups": [],
            "source_dest_check": true,
            "subnet_id": "subnet-076bace13cfe7c164",
            "tags": {
              "Name": "win-rdp-console"
            },
            "tenancy": "default",
            "timeouts": {
              "create": null,
              "delete": null,
              "update": null
            },
            "user_data": "99b622f76a2fa78d9213e3162dc1c9cc67f1a806",
            "user_data_base64": null,
            "volume_tags": null,
            "vpc_security_group_ids": [
              "sg-0dfb3106694b18e1c"
            ]
          },
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo2MDAwMDAwMDAwMDAsImRlbGV0ZSI6MTIwMDAwMDAwMDAwMCwidXBkYXRlIjo2MDAwMDAwMDAwMDB9LCJzY2hlbWFfdmVyc2lvbiI6IjEifQ==",
          "dependencies": [
            "aws_key_pair.terrakey",
            "aws_security_group.rdp_console",
            "aws_subnet.subnet_consoles",
            "aws_vpc.lab_vpc",
            "random_string.password",
            "random_string.version",
            "tls_private_key.pki"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "aws_internet_gateway",
      "name": "lab_vpc_gateway",
      "provider": "provider.aws",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:ec2:us-west-2:363597930206:internet-gateway/igw-0fcf167017bcae245",
            "id": "igw-0fcf167017bcae245",
            "owner_id": "363597930206",
            "tags": null,
            "vpc_id": "vpc-025797bbf44107d3e"
          },
          "private": "bnVsbA==",
          "dependencies": [
            "aws_vpc.lab_vpc"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "aws_key_pair",
      "name": "terrakey",
      "provider": "provider.aws",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "arn": "arn:aws:ec2:us-west-2:363597930206:key-pair/lab-key",
            "fingerprint": "e4:da:12:88:f6:83:b1:d8:4d:a1:cf:b4:73:98:da:38",
            "id": "lab-key",
            "key_name": "lab-key",
            "key_name_prefix": null,
            "key_pair_id": "key-098ea8548398e1892",
            "public_key": "ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAACAQDUJmLfYBAz6oiqRLT1fNGmUwO0O0nGy29Ur3jp0WcSJekJSnZG1Xsgbs0ij2wYWAj7YarZvEr/Oy8LCZhju4pUWFk1c9t2ouhtufSX7ZZnRXWpbzNi/V7yR5JGLuUuWmLAlD5JvQH+wavis1DWRT91YVdgBa7X/v+yIeJikDqadsXfSxzgK51RCMevY7hkrDfGm3jVpuIyO8z68qmNiNkAlQEUmur9fVsqC70yXWp5CrrMQzr20S5cmk04oORdJkzREmyom4rKy2qBqwfHpGS+9dJgHPFS+JwJ4P58lDJUfTPfmsEFNkdl1MVfxl35wFG9SJyxiSwPFqAHtwW6LOMqMee4ZIuCWEVorAYlgn61xbvzyVgmf6ap7+228/zH1r3pORyCEEqzsXduyrlNPq0I8ItfPvfFtwBt9XdGBbrr2a1u2eOa6IitPpxIH5mznyovDp+/i9LWSRmkgZkSU6m1/oGpkGC6ki8HTn5grGr7KYEue03LC1vuFKGvZJrDvZjFdoEjwQ0DUfLL/ldUIgeMxK3XxuNe5I/uIWGce5ErfX9V2E/IdJ4wIRK88sB0PNpdtHNACs+JV6dEsKRPng19MhaZWaDCb9c9tOvFfTSG5uulqL7Nyja7Fo9aj5j32X2CUavqQsof1nl3BCxYt5Q6XF+olkXFvn8/nlRR4EKf2w==",
            "tags": null
          },
          "private": "eyJzY2hlbWFfdmVyc2lvbiI6IjEifQ==",
          "dependencies": [
            "tls_private_key.pki"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "aws_route",
      "name": "lab_vpc_internet_access",
      "provider": "provider.aws",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "destination_cidr_block": "0.0.0.0/0",
            "destination_ipv6_cidr_block": "",
            "destination_prefix_list_id": "",
            "egress_only_gateway_id": "",
            "gateway_id": "igw-0fcf167017bcae245",
            "id": "r-rtb-02ef42302d6c86a921080289494",
            "instance_id": "",
            "instance_owner_id": "",
            "local_gateway_id": "",
            "nat_gateway_id": "",
            "network_interface_id": "",
            "origin": "CreateRoute",
            "route_table_id": "rtb-02ef42302d6c86a92",
            "state": "active",
            "timeouts": null,
            "transit_gateway_id": "",
            "vpc_endpoint_id": null,
            "vpc_peering_connection_id": ""
          },
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjoxMjAwMDAwMDAwMDAsImRlbGV0ZSI6MzAwMDAwMDAwMDAwfX0=",
          "dependencies": [
            "aws_internet_gateway.lab_vpc_gateway",
            "aws_vpc.lab_vpc"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "aws_s3_bucket",
      "name": "securitylab",
      "provider": "provider.aws",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "acceleration_status": "",
            "acl": "private",
            "arn": "arn:aws:s3:::securitylab-0c6mcsmn",
            "bucket": "securitylab-0c6mcsmn",
            "bucket_domain_name": "securitylab-0c6mcsmn.s3.amazonaws.com",
            "bucket_prefix": null,
            "bucket_regional_domain_name": "securitylab-0c6mcsmn.s3.us-west-2.amazonaws.com",
            "cors_rule": [],
            "force_destroy": false,
            "grant": [],
            "hosted_zone_id": "Z3BJ6K6RIION7M",
            "id": "securitylab-0c6mcsmn",
            "lifecycle_rule": [],
            "logging": [],
            "object_lock_configuration": [],
            "policy": null,
            "region": "us-west-2",
            "replication_configuration": [],
            "request_payer": "BucketOwner",
            "server_side_encryption_configuration": [],
            "tags": null,
            "versioning": [
              {
                "enabled": false,
                "mfa_delete": false
              }
            ],
            "website": [],
            "website_domain": null,
            "website_endpoint": null
          },
          "private": "bnVsbA==",
          "dependencies": [
            "random_string.version"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "aws_s3_bucket_object",
      "name": "privatekey",
      "provider": "provider.aws",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "acl": "public-read",
            "bucket": "securitylab-0c6mcsmn",
            "cache_control": "",
            "content": null,
            "content_base64": null,
            "content_disposition": "",
            "content_encoding": "",
            "content_language": "",
            "content_type": "binary/octet-stream",
            "etag": "de0bb12573a94d9a3e2b53805f711061",
            "force_destroy": false,
            "id": "lab-key",
            "key": "lab-key",
            "kms_key_id": null,
            "metadata": null,
            "object_lock_legal_hold_status": "",
            "object_lock_mode": "",
            "object_lock_retain_until_date": "",
            "server_side_encryption": "",
            "source": "$HOME/.ssh/lab-key",
            "storage_class": "STANDARD",
            "tags": null,
            "version_id": "null",
            "website_redirect": ""
          },
          "private": "bnVsbA==",
          "dependencies": [
            "aws_s3_bucket.securitylab",
            "local_file.pki",
            "random_string.version",
            "tls_private_key.pki"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "aws_security_group",
      "name": "proxy",
      "provider": "provider.aws",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "arn": "arn:aws:ec2:us-west-2:363597930206:security-group/sg-02de87335978b4b94",
            "description": "Managed by Terraform",
            "egress": [
              {
                "cidr_blocks": [
                  "0.0.0.0/0"
                ],
                "description": "",
                "from_port": 0,
                "ipv6_cidr_blocks": [],
                "prefix_list_ids": [],
                "protocol": "-1",
                "security_groups": [],
                "self": false,
                "to_port": 0
              }
            ],
            "id": "sg-02de87335978b4b94",
            "ingress": [
              {
                "cidr_blocks": [
                  "0.0.0.0/0"
                ],
                "description": "",
                "from_port": 0,
                "ipv6_cidr_blocks": [],
                "prefix_list_ids": [],
                "protocol": "-1",
                "security_groups": [],
                "self": false,
                "to_port": 0
              }
            ],
            "name": "proxy_rules",
            "name_prefix": "",
            "owner_id": "363597930206",
            "revoke_rules_on_delete": false,
            "tags": null,
            "timeouts": null,
            "vpc_id": "vpc-025797bbf44107d3e"
          },
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo2MDAwMDAwMDAwMDAsImRlbGV0ZSI6NjAwMDAwMDAwMDAwfSwic2NoZW1hX3ZlcnNpb24iOiIxIn0=",
          "dependencies": [
            "aws_vpc.lab_vpc"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "aws_security_group",
      "name": "rdp_console",
      "provider": "provider.aws",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "arn": "arn:aws:ec2:us-west-2:363597930206:security-group/sg-0dfb3106694b18e1c",
            "description": "Managed by Terraform",
            "egress": [
              {
                "cidr_blocks": [
                  "172.16.0.0/16"
                ],
                "description": "",
                "from_port": 443,
                "ipv6_cidr_blocks": [],
                "prefix_list_ids": [],
                "protocol": "tcp",
                "security_groups": [],
                "self": false,
                "to_port": 443
              },
              {
                "cidr_blocks": [
                  "172.16.245.222/32"
                ],
                "description": "",
                "from_port": 0,
                "ipv6_cidr_blocks": [],
                "prefix_list_ids": [],
                "protocol": "-1",
                "security_groups": [],
                "self": false,
                "to_port": 0
              },
              {
                "cidr_blocks": [
                  "172.16.94.0/24"
                ],
                "description": "",
                "from_port": 0,
                "ipv6_cidr_blocks": [],
                "prefix_list_ids": [],
                "protocol": "-1",
                "security_groups": [],
                "self": false,
                "to_port": 0
              }
            ],
            "id": "sg-0dfb3106694b18e1c",
            "ingress": [
              {
                "cidr_blocks": [
                  "172.16.245.223/32",
                  "52.42.34.111/32",
                  "35.162.190.211/32",
                  "52.36.220.5/32",
                  "99.69.210.192/32"
                ],
                "description": "",
                "from_port": 3389,
                "ipv6_cidr_blocks": [],
                "prefix_list_ids": [],
                "protocol": "tcp",
                "security_groups": [],
                "self": false,
                "to_port": 3389
              },
              {
                "cidr_blocks": [
                  "172.16.94.0/24"
                ],
                "description": "",
                "from_port": 0,
                "ipv6_cidr_blocks": [],
                "prefix_list_ids": [],
                "protocol": "-1",
                "security_groups": [],
                "self": false,
                "to_port": 0
              }
            ],
            "name": "rdp_console",
            "name_prefix": "",
            "owner_id": "363597930206",
            "revoke_rules_on_delete": false,
            "tags": null,
            "timeouts": null,
            "vpc_id": "vpc-025797bbf44107d3e"
          },
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo2MDAwMDAwMDAwMDAsImRlbGV0ZSI6NjAwMDAwMDAwMDAwfSwic2NoZW1hX3ZlcnNpb24iOiIxIn0=",
          "dependencies": [
            "aws_vpc.lab_vpc"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "aws_security_group",
      "name": "ssh_console",
      "provider": "provider.aws",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "arn": "arn:aws:ec2:us-west-2:363597930206:security-group/sg-0e88f92af1c2a8414",
            "description": "Managed by Terraform",
            "egress": [
              {
                "cidr_blocks": [
                  "172.16.0.0/16"
                ],
                "description": "",
                "from_port": 443,
                "ipv6_cidr_blocks": [],
                "prefix_list_ids": [],
                "protocol": "tcp",
                "security_groups": [],
                "self": false,
                "to_port": 443
              },
              {
                "cidr_blocks": [
                  "172.16.245.222/32"
                ],
                "description": "",
                "from_port": 0,
                "ipv6_cidr_blocks": [],
                "prefix_list_ids": [],
                "protocol": "-1",
                "security_groups": [],
                "self": false,
                "to_port": 0
              },
              {
                "cidr_blocks": [
                  "172.16.94.0/24"
                ],
                "description": "",
                "from_port": 0,
                "ipv6_cidr_blocks": [],
                "prefix_list_ids": [],
                "protocol": "-1",
                "security_groups": [],
                "self": false,
                "to_port": 0
              }
            ],
            "id": "sg-0e88f92af1c2a8414",
            "ingress": [
              {
                "cidr_blocks": [
                  "172.16.245.223/32",
                  "52.42.34.111/32",
                  "35.162.190.211/32",
                  "52.36.220.5/32",
                  "99.69.210.192/32"
                ],
                "description": "",
                "from_port": 22,
                "ipv6_cidr_blocks": [],
                "prefix_list_ids": [],
                "protocol": "tcp",
                "security_groups": [],
                "self": false,
                "to_port": 22
              },
              {
                "cidr_blocks": [
                  "172.16.94.0/24"
                ],
                "description": "",
                "from_port": 0,
                "ipv6_cidr_blocks": [],
                "prefix_list_ids": [],
                "protocol": "-1",
                "security_groups": [],
                "self": false,
                "to_port": 0
              }
            ],
            "name": "ssh_console",
            "name_prefix": "",
            "owner_id": "363597930206",
            "revoke_rules_on_delete": false,
            "tags": null,
            "timeouts": null,
            "vpc_id": "vpc-025797bbf44107d3e"
          },
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo2MDAwMDAwMDAwMDAsImRlbGV0ZSI6NjAwMDAwMDAwMDAwfSwic2NoZW1hX3ZlcnNpb24iOiIxIn0=",
          "dependencies": [
            "aws_vpc.lab_vpc"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "aws_subnet",
      "name": "subnet_consoles",
      "provider": "provider.aws",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "arn": "arn:aws:ec2:us-west-2:363597930206:subnet/subnet-076bace13cfe7c164",
            "assign_ipv6_address_on_creation": false,
            "availability_zone": "us-west-2a",
            "availability_zone_id": "usw2-az2",
            "cidr_block": "172.16.94.0/24",
            "customer_owned_ipv4_pool": "",
            "id": "subnet-076bace13cfe7c164",
            "ipv6_cidr_block": "",
            "ipv6_cidr_block_association_id": "",
            "map_customer_owned_ip_on_launch": false,
            "map_public_ip_on_launch": true,
            "outpost_arn": "",
            "owner_id": "363597930206",
            "tags": null,
            "timeouts": null,
            "vpc_id": "vpc-025797bbf44107d3e"
          },
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo2MDAwMDAwMDAwMDAsImRlbGV0ZSI6MTIwMDAwMDAwMDAwMH0sInNjaGVtYV92ZXJzaW9uIjoiMSJ9",
          "dependencies": [
            "aws_vpc.lab_vpc"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "aws_subnet",
      "name": "subnet_enva",
      "provider": "provider.aws",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "arn": "arn:aws:ec2:us-west-2:363597930206:subnet/subnet-08f393feff862302b",
            "assign_ipv6_address_on_creation": false,
            "availability_zone": "us-west-2a",
            "availability_zone_id": "usw2-az2",
            "cidr_block": "172.16.37.0/24",
            "customer_owned_ipv4_pool": "",
            "id": "subnet-08f393feff862302b",
            "ipv6_cidr_block": "",
            "ipv6_cidr_block_association_id": "",
            "map_customer_owned_ip_on_launch": false,
            "map_public_ip_on_launch": true,
            "outpost_arn": "",
            "owner_id": "363597930206",
            "tags": null,
            "timeouts": null,
            "vpc_id": "vpc-025797bbf44107d3e"
          },
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo2MDAwMDAwMDAwMDAsImRlbGV0ZSI6MTIwMDAwMDAwMDAwMH0sInNjaGVtYV92ZXJzaW9uIjoiMSJ9",
          "dependencies": [
            "aws_vpc.lab_vpc"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "aws_subnet",
      "name": "subnet_envb",
      "provider": "provider.aws",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "arn": "arn:aws:ec2:us-west-2:363597930206:subnet/subnet-0a379dca0237eda3f",
            "assign_ipv6_address_on_creation": false,
            "availability_zone": "us-west-2a",
            "availability_zone_id": "usw2-az2",
            "cidr_block": "172.16.64.0/24",
            "customer_owned_ipv4_pool": "",
            "id": "subnet-0a379dca0237eda3f",
            "ipv6_cidr_block": "",
            "ipv6_cidr_block_association_id": "",
            "map_customer_owned_ip_on_launch": false,
            "map_public_ip_on_launch": true,
            "outpost_arn": "",
            "owner_id": "363597930206",
            "tags": null,
            "timeouts": null,
            "vpc_id": "vpc-025797bbf44107d3e"
          },
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo2MDAwMDAwMDAwMDAsImRlbGV0ZSI6MTIwMDAwMDAwMDAwMH0sInNjaGVtYV92ZXJzaW9uIjoiMSJ9",
          "dependencies": [
            "aws_vpc.lab_vpc"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "aws_subnet",
      "name": "subnet_proxy",
      "provider": "provider.aws",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "arn": "arn:aws:ec2:us-west-2:363597930206:subnet/subnet-0fe559530d08ca9a5",
            "assign_ipv6_address_on_creation": false,
            "availability_zone": "us-west-2a",
            "availability_zone_id": "usw2-az2",
            "cidr_block": "172.16.245.0/24",
            "customer_owned_ipv4_pool": "",
            "id": "subnet-0fe559530d08ca9a5",
            "ipv6_cidr_block": "",
            "ipv6_cidr_block_association_id": "",
            "map_customer_owned_ip_on_launch": false,
            "map_public_ip_on_launch": true,
            "outpost_arn": "",
            "owner_id": "363597930206",
            "tags": null,
            "timeouts": null,
            "vpc_id": "vpc-025797bbf44107d3e"
          },
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo2MDAwMDAwMDAwMDAsImRlbGV0ZSI6MTIwMDAwMDAwMDAwMH0sInNjaGVtYV92ZXJzaW9uIjoiMSJ9",
          "dependencies": [
            "aws_vpc.lab_vpc"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "aws_vpc",
      "name": "lab_vpc",
      "provider": "provider.aws",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "arn": "arn:aws:ec2:us-west-2:363597930206:vpc/vpc-025797bbf44107d3e",
            "assign_generated_ipv6_cidr_block": false,
            "cidr_block": "172.16.0.0/16",
            "default_network_acl_id": "acl-08346d9de3b1901ae",
            "default_route_table_id": "rtb-02ef42302d6c86a92",
            "default_security_group_id": "sg-0b795c76d77fd0561",
            "dhcp_options_id": "dopt-f1501e88",
            "enable_classiclink": false,
            "enable_classiclink_dns_support": false,
            "enable_dns_hostnames": true,
            "enable_dns_support": true,
            "id": "vpc-025797bbf44107d3e",
            "instance_tenancy": "default",
            "ipv6_association_id": "",
            "ipv6_cidr_block": "",
            "main_route_table_id": "rtb-02ef42302d6c86a92",
            "owner_id": "363597930206",
            "tags": {
              "Name": "Lab VPC"
            }
          },
          "private": "eyJzY2hlbWFfdmVyc2lvbiI6IjEifQ=="
        }
      ]
    },
    {
      "mode": "managed",
      "type": "local_file",
      "name": "guac_auth_pw",
      "provider": "provider.local",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "content": "0c6mcsmn",
            "content_base64": null,
            "directory_permission": "0777",
            "file_permission": "0777",
            "filename": "guac-auth-password.txt",
            "id": "cc8f93df30ce405171a348fb292e3e6f63ed3d74",
            "sensitive_content": null,
            "source": null
          },
          "private": "bnVsbA==",
          "dependencies": [
            "random_string.version"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "local_file",
      "name": "guac_auth_un",
      "provider": "provider.local",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "content": "ps-student-cp8w",
            "content_base64": null,
            "directory_permission": "0777",
            "file_permission": "0777",
            "filename": "guac-auth-username.txt",
            "id": "680f1d8e75a533a436b17377ec9cca90ac5e8c89",
            "sensitive_content": null,
            "source": null
          },
          "private": "bnVsbA==",
          "dependencies": [
            "random_string.user_name"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "local_file",
      "name": "guac_dns",
      "provider": "provider.local",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "content": "http://ec2-52-33-52-157.us-west-2.compute.amazonaws.com",
            "content_base64": null,
            "directory_permission": "0777",
            "file_permission": "0777",
            "filename": "guac-dnsname.txt",
            "id": "c13966f07379bb886c57b0b3db75f60b446f6f4d",
            "sensitive_content": null,
            "source": null
          },
          "private": "bnVsbA==",
          "dependencies": [
            "aws_instance.nix-ssh-console",
            "aws_instance.ps-guac",
            "aws_instance.win-rdp-console",
            "aws_key_pair.terrakey",
            "aws_security_group.proxy",
            "aws_security_group.rdp_console",
            "aws_security_group.ssh_console",
            "aws_subnet.subnet_consoles",
            "aws_subnet.subnet_proxy",
            "aws_vpc.lab_vpc",
            "random_string.password",
            "random_string.user_name",
            "random_string.version",
            "tls_private_key.pki"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "local_file",
      "name": "nix-ssh-console-1-dns",
      "provider": "provider.local",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "content": "ec2-34-214-125-219.us-west-2.compute.amazonaws.com",
            "content_base64": null,
            "directory_permission": "0777",
            "file_permission": "0777",
            "filename": "connections/1-nix-ssh-console/hostname",
            "id": "1b1fdebf27763e1af8cd9911722cbe8c02c69f3d",
            "sensitive_content": null,
            "source": null
          },
          "private": "bnVsbA==",
          "dependencies": [
            "aws_instance.nix-ssh-console",
            "aws_key_pair.terrakey",
            "aws_security_group.ssh_console",
            "aws_subnet.subnet_consoles",
            "aws_vpc.lab_vpc",
            "tls_private_key.pki"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "local_file",
      "name": "nix-ssh-console-1-extip",
      "provider": "provider.local",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "content": "34.214.125.219",
            "content_base64": null,
            "directory_permission": "0777",
            "file_permission": "0777",
            "filename": "connections/1-nix-ssh-console/extip",
            "id": "e91122a372b2dca238db6bc5dc8b452bb0fa0a18",
            "sensitive_content": null,
            "source": null
          },
          "private": "bnVsbA==",
          "dependencies": [
            "aws_instance.nix-ssh-console",
            "aws_key_pair.terrakey",
            "aws_security_group.ssh_console",
            "aws_subnet.subnet_consoles",
            "aws_vpc.lab_vpc",
            "tls_private_key.pki"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "local_file",
      "name": "nix-ssh-console-1-name",
      "provider": "provider.local",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "content": "Ubuntu #1",
            "content_base64": null,
            "directory_permission": "0777",
            "file_permission": "0777",
            "filename": "connections/1-nix-ssh-console/name",
            "id": "adf27d4dad40344e1d0b9aa4351bdda8800e62aa",
            "sensitive_content": null,
            "source": null
          },
          "private": "bnVsbA=="
        }
      ]
    },
    {
      "mode": "managed",
      "type": "local_file",
      "name": "nix-ssh-console-1-port",
      "provider": "provider.local",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "content": "22",
            "content_base64": null,
            "directory_permission": "0777",
            "file_permission": "0777",
            "filename": "connections/1-nix-ssh-console/port",
            "id": "12c6fc06c99a462375eeb3f43dfd832b08ca9e17",
            "sensitive_content": null,
            "source": null
          },
          "private": "bnVsbA=="
        }
      ]
    },
    {
      "mode": "managed",
      "type": "local_file",
      "name": "nix-ssh-console-1-protocol",
      "provider": "provider.local",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "content": "ssh",
            "content_base64": null,
            "directory_permission": "0777",
            "file_permission": "0777",
            "filename": "connections/1-nix-ssh-console/protocol",
            "id": "e8b9f665f844bf5da8294a1282fd740a4b17d2a6",
            "sensitive_content": null,
            "source": null
          },
          "private": "bnVsbA=="
        }
      ]
    },
    {
      "mode": "managed",
      "type": "local_file",
      "name": "nix-ssh-console-1-un",
      "provider": "provider.local",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "content": "ubuntu",
            "content_base64": null,
            "directory_permission": "0777",
            "file_permission": "0777",
            "filename": "connections/1-nix-ssh-console/username",
            "id": "24bf68e341ce0fbd9259a5d51feed79682ea4eba",
            "sensitive_content": null,
            "source": null
          },
          "private": "bnVsbA=="
        }
      ]
    },
    {
      "mode": "managed",
      "type": "local_file",
      "name": "pki",
      "provider": "provider.local",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "content": "-----BEGIN RSA PRIVATE KEY-----\n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\n-----END RSA PRIVATE KEY-----\n",
            "content_base64": null,
            "directory_permission": "0777",
            "file_permission": "0600",
            "filename": "$HOME/.ssh/lab-key",
            "id": "8f3c5c165c60171bc16cf6dc5dfc176a66c00a78",
            "sensitive_content": null,
            "source": null
          },
          "private": "bnVsbA==",
          "dependencies": [
            "tls_private_key.pki"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "local_file",
      "name": "pki-1-ssh",
      "provider": "provider.local",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "content": "-----BEGIN RSA PRIVATE KEY-----\n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\n-----END RSA PRIVATE KEY-----\n",
            "content_base64": null,
            "directory_permission": "0777",
            "file_permission": "0777",
            "filename": "connections/1-nix-ssh-console/private-key",
            "id": "8f3c5c165c60171bc16cf6dc5dfc176a66c00a78",
            "sensitive_content": null,
            "source": null
          },
          "private": "bnVsbA==",
          "dependencies": [
            "tls_private_key.pki"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "local_file",
      "name": "win-rdp-console-1-dns",
      "provider": "provider.local",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "content": "ec2-34-215-220-164.us-west-2.compute.amazonaws.com",
            "content_base64": null,
            "directory_permission": "0777",
            "file_permission": "0777",
            "filename": "connections/2-win-rdp-console/hostname",
            "id": "2de4b0de1723277a12a6a2ce7b7e397c7ceeba82",
            "sensitive_content": null,
            "source": null
          },
          "private": "bnVsbA==",
          "dependencies": [
            "aws_instance.win-rdp-console",
            "aws_key_pair.terrakey",
            "aws_security_group.rdp_console",
            "aws_subnet.subnet_consoles",
            "aws_vpc.lab_vpc",
            "random_string.password",
            "random_string.version",
            "tls_private_key.pki"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "local_file",
      "name": "win-rdp-console-1-name",
      "provider": "provider.local",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "content": "Windows 2019 #1",
            "content_base64": null,
            "directory_permission": "0777",
            "file_permission": "0777",
            "filename": "connections/2-win-rdp-console/name",
            "id": "781aedeb294b7a46446427b53c1b718bd6d9dd8e",
            "sensitive_content": null,
            "source": null
          },
          "private": "bnVsbA=="
        }
      ]
    },
    {
      "mode": "managed",
      "type": "local_file",
      "name": "win-rdp-console-1-protocol",
      "provider": "provider.local",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "content": "rdp",
            "content_base64": null,
            "directory_permission": "0777",
            "file_permission": "0777",
            "filename": "connections/2-win-rdp-console/protocol",
            "id": "79c647d3981fe0d6318d94cfa551dc0aea03c0fe",
            "sensitive_content": null,
            "source": null
          },
          "private": "bnVsbA=="
        }
      ]
    },
    {
      "mode": "managed",
      "type": "local_file",
      "name": "win-rdp-console-2-cert",
      "provider": "provider.local",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "content": "true",
            "content_base64": null,
            "directory_permission": "0777",
            "file_permission": "0777",
            "filename": "connections/2-win-rdp-console/ignore-cert",
            "id": "5ffe533b830f08a0326348a9160afafc8ada44db",
            "sensitive_content": null,
            "source": null
          },
          "private": "bnVsbA=="
        }
      ]
    },
    {
      "mode": "managed",
      "type": "local_file",
      "name": "win-rdp-console-2-extip",
      "provider": "provider.local",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "content": "34.215.220.164",
            "content_base64": null,
            "directory_permission": "0777",
            "file_permission": "0777",
            "filename": "connections/2-win-rdp-console/extip",
            "id": "f4a42dc68bed3aef553f2f877f8e9e4f83035cda",
            "sensitive_content": null,
            "source": null
          },
          "private": "bnVsbA==",
          "dependencies": [
            "aws_instance.win-rdp-console",
            "aws_key_pair.terrakey",
            "aws_security_group.rdp_console",
            "aws_subnet.subnet_consoles",
            "aws_vpc.lab_vpc",
            "random_string.password",
            "random_string.version",
            "tls_private_key.pki"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "local_file",
      "name": "win-rdp-console-2-nla",
      "provider": "provider.local",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "content": "nla",
            "content_base64": null,
            "directory_permission": "0777",
            "file_permission": "0777",
            "filename": "connections/2-win-rdp-console/security",
            "id": "149973edabb7e19360fa0c71c64925e542041db8",
            "sensitive_content": null,
            "source": null
          },
          "private": "bnVsbA=="
        }
      ]
    },
    {
      "mode": "managed",
      "type": "local_file",
      "name": "win-rdp-console-2-port",
      "provider": "provider.local",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "content": "3389",
            "content_base64": null,
            "directory_permission": "0777",
            "file_permission": "0777",
            "filename": "connections/2-win-rdp-console/port",
            "id": "3461c9906b0890672a68c45dc9d9616613d9b385",
            "sensitive_content": null,
            "source": null
          },
          "private": "bnVsbA=="
        }
      ]
    },
    {
      "mode": "managed",
      "type": "local_file",
      "name": "win-rdp-console-2-pw",
      "provider": "provider.local",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "content": "eot10@XSJghePSHl",
            "content_base64": null,
            "directory_permission": "0777",
            "file_permission": "0777",
            "filename": "connections/2-win-rdp-console/password",
            "id": "89c1b6b90585719cc49ad20d35fe0e9e0489c8cb",
            "sensitive_content": null,
            "source": null
          },
          "private": "bnVsbA==",
          "dependencies": [
            "random_string.password"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "local_file",
      "name": "win-rdp-console-2-un",
      "provider": "provider.local",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "content": "administrator",
            "content_base64": null,
            "directory_permission": "0777",
            "file_permission": "0777",
            "filename": "connections/2-win-rdp-console/username",
            "id": "b3aca92c793ee0e9b1a9b0a5f5fc044e05140df3",
            "sensitive_content": null,
            "source": null
          },
          "private": "bnVsbA=="
        }
      ]
    },
    {
      "mode": "managed",
      "type": "random_string",
      "name": "password",
      "provider": "provider.random",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "id": "eot10@XSJghePSHl",
            "keepers": null,
            "length": 16,
            "lower": true,
            "min_lower": 0,
            "min_numeric": 1,
            "min_special": 1,
            "min_upper": 1,
            "number": true,
            "override_special": "!@",
            "result": "eot10@XSJghePSHl",
            "special": true,
            "upper": true
          },
          "private": "eyJzY2hlbWFfdmVyc2lvbiI6IjEifQ=="
        }
      ]
    },
    {
      "mode": "managed",
      "type": "random_string",
      "name": "user_name",
      "provider": "provider.random",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "id": "cp8w",
            "keepers": null,
            "length": 4,
            "lower": true,
            "min_lower": 0,
            "min_numeric": 0,
            "min_special": 0,
            "min_upper": 0,
            "number": true,
            "override_special": null,
            "result": "cp8w",
            "special": false,
            "upper": false
          },
          "private": "eyJzY2hlbWFfdmVyc2lvbiI6IjEifQ=="
        }
      ]
    },
    {
      "mode": "managed",
      "type": "random_string",
      "name": "version",
      "provider": "provider.random",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "id": "0c6mcsmn",
            "keepers": null,
            "length": 8,
            "lower": true,
            "min_lower": 0,
            "min_numeric": 0,
            "min_special": 0,
            "min_upper": 0,
            "number": true,
            "override_special": null,
            "result": "0c6mcsmn",
            "special": false,
            "upper": false
          },
          "private": "eyJzY2hlbWFfdmVyc2lvbiI6IjEifQ=="
        }
      ]
    },
    {
      "mode": "managed",
      "type": "tls_private_key",
      "name": "pki",
      "provider": "provider.tls",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "algorithm": "RSA",
            "ecdsa_curve": "P224",
            "id": "1abd3d58c27dc67671ace8195df7074f563926d5",
            "private_key_pem": "-----BEGIN RSA PRIVATE KEY-----\n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\n-----END RSA PRIVATE KEY-----\n",
            "public_key_fingerprint_md5": "92:5a:e2:14:db:62:81:37:f8:f8:86:c7:2b:da:80:02",
            "public_key_openssh": "ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAACAQDUJmLfYBAz6oiqRLT1fNGmUwO0O0nGy29Ur3jp0WcSJekJSnZG1Xsgbs0ij2wYWAj7YarZvEr/Oy8LCZhju4pUWFk1c9t2ouhtufSX7ZZnRXWpbzNi/V7yR5JGLuUuWmLAlD5JvQH+wavis1DWRT91YVdgBa7X/v+yIeJikDqadsXfSxzgK51RCMevY7hkrDfGm3jVpuIyO8z68qmNiNkAlQEUmur9fVsqC70yXWp5CrrMQzr20S5cmk04oORdJkzREmyom4rKy2qBqwfHpGS+9dJgHPFS+JwJ4P58lDJUfTPfmsEFNkdl1MVfxl35wFG9SJyxiSwPFqAHtwW6LOMqMee4ZIuCWEVorAYlgn61xbvzyVgmf6ap7+228/zH1r3pORyCEEqzsXduyrlNPq0I8ItfPvfFtwBt9XdGBbrr2a1u2eOa6IitPpxIH5mznyovDp+/i9LWSRmkgZkSU6m1/oGpkGC6ki8HTn5grGr7KYEue03LC1vuFKGvZJrDvZjFdoEjwQ0DUfLL/ldUIgeMxK3XxuNe5I/uIWGce5ErfX9V2E/IdJ4wIRK88sB0PNpdtHNACs+JV6dEsKRPng19MhaZWaDCb9c9tOvFfTSG5uulqL7Nyja7Fo9aj5j32X2CUavqQsof1nl3BCxYt5Q6XF+olkXFvn8/nlRR4EKf2w==\n",
            "public_key_pem": "-----BEGIN PUBLIC KEY-----\nMIICIjANBgkqhkiG9w0BAQEFAAOCAg8AMIICCgKCAgEA1CZi32AQM+qIqkS09XzR\nplMDtDtJxstvVK946dFnEiXpCUp2RtV7IG7NIo9sGFgI+2Gq2bxK/zsvCwmYY7uK\nVFhZNXPbdqLobbn0l+2WZ0V1qW8zYv1e8keSRi7lLlpiwJQ+Sb0B/sGr4rNQ1kU/\ndWFXYAWu1/7/siHiYpA6mnbF30sc4CudUQjHr2O4ZKw3xpt41abiMjvM+vKpjYjZ\nAJUBFJrq/X1bKgu9Ml1qeQq6zEM69tEuXJpNOKDkXSZM0RJsqJuKystqgasHx6Rk\nvvXSYBzxUvicCeD+fJQyVH0z35rBBTZHZdTFX8Zd+cBRvUicsYksDxagB7cFuizj\nKjHnuGSLglhFaKwGJYJ+tcW788lYJn+mqe/ttvP8x9a96TkcghBKs7F3bsq5TT6t\nCPCLXz73xbcAbfV3RgW669mtbtnjmuiIrT6cSB+Zs58qLw6fv4vS1kkZpIGZElOp\ntf6BqZBgupIvB05+YKxq+ymBLntNywtb7hShr2Saw72YxXaBI8ENA1Hyy/5XVCIH\njMSt18bjXuSP7iFhnHuRK31/VdhPyHSeMCESvPLAdDzaXbRzQArPiVenRLCkT54N\nfTIWmVmgwm/XPbTrxX00hubrpai+zco2uxaPWo+Y99l9glGr6kLKH9Z5dwQsWLeU\nOlxfqJZFxb5/P55UUeBCn9sCAwEAAQ==\n-----END PUBLIC KEY-----\n",
            "rsa_bits": 4096
          },
          "private": "bnVsbA=="
        }
      ]
    }
  ]
}
